

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using TDA.Bencher;
using Microsoft.SqlServer.Types;
using System.Threading;

namespace TDA.Bencher
{
    public partial class FluentModel : OpenAccessContext, IFluentModelUnitOfWork
    {
        private static string connectionStringName = @"AdventureWorksConnection";

        private static BackendConfiguration backend = GetBackendConfiguration();

        private static MetadataSource metadataSource = new FluentModelMetadataSource();

        public FluentModel()
            : base(connectionStringName, backend, metadataSource)
        { }

        public FluentModel(string connection)
            : base(connection, backend, metadataSource)
        { }

        public FluentModel(BackendConfiguration backendConfiguration)
            : base(connectionStringName, backendConfiguration, metadataSource)
        { }

        public FluentModel(string connection, MetadataSource metadataSource)
            : base(connection, backend, metadataSource)
        { }

        public FluentModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
            : base(connection, backendConfiguration, metadataSource)
        { }

        public IQueryable<Store> Stores
        {
            get
            {
                return this.GetAll<Store>();
            }
        }
        public IQueryable<StateProvince> StateProvinces
        {
            get
            {
                return this.GetAll<StateProvince>();
            }
        }

        public IQueryable<SpecialOfferProduct> SpecialOfferProducts
        {
            get
            {
                return this.GetAll<SpecialOfferProduct>();
            }
        }

        public IQueryable<SpecialOffer> SpecialOffers
        {
            get
            {
                return this.GetAll<SpecialOffer>();
            }
        }

        public IQueryable<ShoppingCartItem> ShoppingCartItems
        {
            get
            {
                return this.GetAll<ShoppingCartItem>();
            }
        }

        public IQueryable<SalesTerritoryHistory> SalesTerritoryHistories
        {
            get
            {
                return this.GetAll<SalesTerritoryHistory>();
            }
        }

        public IQueryable<SalesTerritory> SalesTerritories
        {
            get
            {
                return this.GetAll<SalesTerritory>();
            }
        }

        public IQueryable<SalesTaxRate> SalesTaxRates
        {
            get
            {
                return this.GetAll<SalesTaxRate>();
            }
        }

        public IQueryable<SalesReason> SalesReasons
        {
            get
            {
                return this.GetAll<SalesReason>();
            }
        }

        public IQueryable<SalesPersonQuotaHistory> SalesPersonQuotaHistories
        {
            get
            {
                return this.GetAll<SalesPersonQuotaHistory>();
            }
        }

        public IQueryable<SalesPerson> SalesPeople
        {
            get
            {
                return this.GetAll<SalesPerson>();
            }
        }

        public IQueryable<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
        {
            get
            {
                return this.GetAll<SalesOrderHeaderSalesReason>();
            }
        }

        public IQueryable<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this.GetAll<SalesOrderHeader>();
            }
        }

        public IQueryable<SalesOrderDetail> SalesOrderDetails
        {
            get
            {
                return this.GetAll<SalesOrderDetail>();
            }
        }

        public IQueryable<PhoneNumberType> PhoneNumberTypes
        {
            get
            {
                return this.GetAll<PhoneNumberType>();
            }
        }

        public IQueryable<PersonPhone> PersonPhones
        {
            get
            {
                return this.GetAll<PersonPhone>();
            }
        }

        public IQueryable<PersonCreditCard> PersonCreditCards
        {
            get
            {
                return this.GetAll<PersonCreditCard>();
            }
        }

        public IQueryable<Person> People
        {
            get
            {
                return this.GetAll<Person>();
            }
        }

        public IQueryable<Password> Passwords
        {
            get
            {
                return this.GetAll<Password>();
            }
        }

        public IQueryable<EmailAddress> EmailAddresses
        {
            get
            {
                return this.GetAll<EmailAddress>();
            }
        }

        public IQueryable<Customer> Customers
        {
            get
            {
                return this.GetAll<Customer>();
            }
        }

        public IQueryable<CurrencyRate> CurrencyRates
        {
            get
            {
                return this.GetAll<CurrencyRate>();
            }
        }

        public IQueryable<Currency> Currencies
        {
            get
            {
                return this.GetAll<Currency>();
            }
        }

        public IQueryable<CreditCard> CreditCards
        {
            get
            {
                return this.GetAll<CreditCard>();
            }
        }

        public IQueryable<CountryRegionCurrency> CountryRegionCurrencies
        {
            get
            {
                return this.GetAll<CountryRegionCurrency>();
            }
        }

        public IQueryable<CountryRegion> CountryRegions
        {
            get
            {
                return this.GetAll<CountryRegion>();
            }
        }

        public IQueryable<ContactType> ContactTypes
        {
            get
            {
                return this.GetAll<ContactType>();
            }
        }

        public IQueryable<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return this.GetAll<BusinessEntityContact>();
            }
        }

        public IQueryable<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return this.GetAll<BusinessEntityAddress>();
            }
        }

        public IQueryable<BusinessEntity> BusinessEntities
        {
            get
            {
                return this.GetAll<BusinessEntity>();
            }
        }

        public IQueryable<AddressType> AddressTypes
        {
            get
            {
                return this.GetAll<AddressType>();
            }
        }

        public IQueryable<Address> Addresses
        {
            get
            {
                return this.GetAll<Address>();
            }
        }

        public static BackendConfiguration GetBackendConfiguration()
        {
            BackendConfiguration backend = new BackendConfiguration();
            backend.Backend = "MsSql";
            backend.ProviderName = "System.Data.SqlClient";
            return backend;
        }
    }

    public interface IFluentModelUnitOfWork : IUnitOfWork
    {
        IQueryable<Store> Stores
        {
            get;
        }
        IQueryable<StateProvince> StateProvinces
        {
            get;
        }
        IQueryable<SpecialOfferProduct> SpecialOfferProducts
        {
            get;
        }
        IQueryable<SpecialOffer> SpecialOffers
        {
            get;
        }
        IQueryable<ShoppingCartItem> ShoppingCartItems
        {
            get;
        }
        IQueryable<SalesTerritoryHistory> SalesTerritoryHistories
        {
            get;
        }
        IQueryable<SalesTerritory> SalesTerritories
        {
            get;
        }
        IQueryable<SalesTaxRate> SalesTaxRates
        {
            get;
        }
        IQueryable<SalesReason> SalesReasons
        {
            get;
        }
        IQueryable<SalesPersonQuotaHistory> SalesPersonQuotaHistories
        {
            get;
        }
        IQueryable<SalesPerson> SalesPeople
        {
            get;
        }
        IQueryable<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
        {
            get;
        }
        IQueryable<SalesOrderHeader> SalesOrderHeaders
        {
            get;
        }
        IQueryable<SalesOrderDetail> SalesOrderDetails
        {
            get;
        }
        IQueryable<PhoneNumberType> PhoneNumberTypes
        {
            get;
        }
        IQueryable<PersonPhone> PersonPhones
        {
            get;
        }
        IQueryable<PersonCreditCard> PersonCreditCards
        {
            get;
        }
        IQueryable<Person> People
        {
            get;
        }
        IQueryable<Password> Passwords
        {
            get;
        }
        IQueryable<EmailAddress> EmailAddresses
        {
            get;
        }
        IQueryable<Customer> Customers
        {
            get;
        }
        IQueryable<CurrencyRate> CurrencyRates
        {
            get;
        }
        IQueryable<Currency> Currencies
        {
            get;
        }
        IQueryable<CreditCard> CreditCards
        {
            get;
        }
        IQueryable<CountryRegionCurrency> CountryRegionCurrencies
        {
            get;
        }
        IQueryable<CountryRegion> CountryRegions
        {
            get;
        }
        IQueryable<ContactType> ContactTypes
        {
            get;
        }
        IQueryable<BusinessEntityContact> BusinessEntityContacts
        {
            get;
        }
        IQueryable<BusinessEntityAddress> BusinessEntityAddresses
        {
            get;
        }
        IQueryable<BusinessEntity> BusinessEntities
        {
            get;
        }
        IQueryable<AddressType> AddressTypes
        {
            get;
        }
        IQueryable<Address> Addresses
        {
            get;
        }
    }
}
namespace TDA.Bencher
{
    public partial class Store
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private int? _salesPersonID;
        public virtual int? SalesPersonID
        {
            get
            {
                return this._salesPersonID;
            }
            set
            {
                this._salesPersonID = value;
            }
        }

        private string _demographics;
        public virtual string Demographics
        {
            get
            {
                return this._demographics;
            }
            set
            {
                this._demographics = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private BusinessEntity _businessEntity;
        public virtual BusinessEntity BusinessEntity
        {
            get
            {
                return this._businessEntity;
            }
            set
            {
                this._businessEntity = value;
            }
        }

        private SalesPerson _salesPerson;
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return this._salesPerson;
            }
            set
            {
                this._salesPerson = value;
            }
        }

        private IList<Customer> _customers = new List<Customer>();
        public virtual IList<Customer> Customers
        {
            get
            {
                return this._customers;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class StateProvince
    {
        private int _stateProvinceID;
        public virtual int StateProvinceID
        {
            get
            {
                return this._stateProvinceID;
            }
            set
            {
                this._stateProvinceID = value;
            }
        }

        private string _stateProvinceCode;
        public virtual string StateProvinceCode
        {
            get
            {
                return this._stateProvinceCode;
            }
            set
            {
                this._stateProvinceCode = value;
            }
        }

        private string _countryRegionCode;
        public virtual string CountryRegionCode
        {
            get
            {
                return this._countryRegionCode;
            }
            set
            {
                this._countryRegionCode = value;
            }
        }

        private bool _isOnlyStateProvinceFlag;
        public virtual bool IsOnlyStateProvinceFlag
        {
            get
            {
                return this._isOnlyStateProvinceFlag;
            }
            set
            {
                this._isOnlyStateProvinceFlag = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private int _territoryID;
        public virtual int TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private CountryRegion _countryRegion;
        public virtual CountryRegion CountryRegion
        {
            get
            {
                return this._countryRegion;
            }
            set
            {
                this._countryRegion = value;
            }
        }

        private SalesTerritory _salesTerritory;
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return this._salesTerritory;
            }
            set
            {
                this._salesTerritory = value;
            }
        }

        private IList<SalesTaxRate> _salesTaxRates = new List<SalesTaxRate>();
        public virtual IList<SalesTaxRate> SalesTaxRates
        {
            get
            {
                return this._salesTaxRates;
            }
        }

        private IList<Address> _addresses = new List<Address>();
        public virtual IList<Address> Addresses
        {
            get
            {
                return this._addresses;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SpecialOfferProduct
    {
        private int _specialOfferID;
        public virtual int SpecialOfferID
        {
            get
            {
                return this._specialOfferID;
            }
            set
            {
                this._specialOfferID = value;
            }
        }

        private int _productID;
        public virtual int ProductID
        {
            get
            {
                return this._productID;
            }
            set
            {
                this._productID = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private SpecialOffer _specialOffer;
        public virtual SpecialOffer SpecialOffer
        {
            get
            {
                return this._specialOffer;
            }
            set
            {
                this._specialOffer = value;
            }
        }

        private IList<SalesOrderDetail> _salesOrderDetails = new List<SalesOrderDetail>();
        public virtual IList<SalesOrderDetail> SalesOrderDetails
        {
            get
            {
                return this._salesOrderDetails;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SpecialOffer
    {
        private int _specialOfferID;
        public virtual int SpecialOfferID
        {
            get
            {
                return this._specialOfferID;
            }
            set
            {
                this._specialOfferID = value;
            }
        }

        private string _description;
        public virtual string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        private decimal _discountPct;
        public virtual decimal DiscountPct
        {
            get
            {
                return this._discountPct;
            }
            set
            {
                this._discountPct = value;
            }
        }

        private string _type;
        public virtual string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }

        private string _category;
        public virtual string Category
        {
            get
            {
                return this._category;
            }
            set
            {
                this._category = value;
            }
        }

        private DateTime _startDate;
        public virtual DateTime StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                this._startDate = value;
            }
        }

        private DateTime _endDate;
        public virtual DateTime EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                this._endDate = value;
            }
        }

        private int _minQty;
        public virtual int MinQty
        {
            get
            {
                return this._minQty;
            }
            set
            {
                this._minQty = value;
            }
        }

        private int? _maxQty;
        public virtual int? MaxQty
        {
            get
            {
                return this._maxQty;
            }
            set
            {
                this._maxQty = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SpecialOfferProduct> _specialOfferProducts = new List<SpecialOfferProduct>();
        public virtual IList<SpecialOfferProduct> SpecialOfferProducts
        {
            get
            {
                return this._specialOfferProducts;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class ShoppingCartItem
    {
        private int _shoppingCartItemID;
        public virtual int ShoppingCartItemID
        {
            get
            {
                return this._shoppingCartItemID;
            }
            set
            {
                this._shoppingCartItemID = value;
            }
        }

        private string _shoppingCartID;
        public virtual string ShoppingCartID
        {
            get
            {
                return this._shoppingCartID;
            }
            set
            {
                this._shoppingCartID = value;
            }
        }

        private int _quantity;
        public virtual int Quantity
        {
            get
            {
                return this._quantity;
            }
            set
            {
                this._quantity = value;
            }
        }

        private int _productID;
        public virtual int ProductID
        {
            get
            {
                return this._productID;
            }
            set
            {
                this._productID = value;
            }
        }

        private DateTime _dateCreated;
        public virtual DateTime DateCreated
        {
            get
            {
                return this._dateCreated;
            }
            set
            {
                this._dateCreated = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesTerritoryHistory
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int _territoryID;
        public virtual int TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private DateTime _startDate;
        public virtual DateTime StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                this._startDate = value;
            }
        }

        private DateTime? _endDate;
        public virtual DateTime? EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                this._endDate = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private SalesPerson _salesPerson;
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return this._salesPerson;
            }
            set
            {
                this._salesPerson = value;
            }
        }

        private SalesTerritory _salesTerritory;
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return this._salesTerritory;
            }
            set
            {
                this._salesTerritory = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesTerritory
    {
        private int _territoryID;
        public virtual int TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private string _countryRegionCode;
        public virtual string CountryRegionCode
        {
            get
            {
                return this._countryRegionCode;
            }
            set
            {
                this._countryRegionCode = value;
            }
        }

        private string _group;
        public virtual string Group
        {
            get
            {
                return this._group;
            }
            set
            {
                this._group = value;
            }
        }

        private decimal _salesYTD;
        public virtual decimal SalesYTD
        {
            get
            {
                return this._salesYTD;
            }
            set
            {
                this._salesYTD = value;
            }
        }

        private decimal _salesLastYear;
        public virtual decimal SalesLastYear
        {
            get
            {
                return this._salesLastYear;
            }
            set
            {
                this._salesLastYear = value;
            }
        }

        private decimal _costYTD;
        public virtual decimal CostYTD
        {
            get
            {
                return this._costYTD;
            }
            set
            {
                this._costYTD = value;
            }
        }

        private decimal _costLastYear;
        public virtual decimal CostLastYear
        {
            get
            {
                return this._costLastYear;
            }
            set
            {
                this._costLastYear = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<StateProvince> _stateProvinces = new List<StateProvince>();
        public virtual IList<StateProvince> StateProvinces
        {
            get
            {
                return this._stateProvinces;
            }
        }

        private IList<SalesTerritoryHistory> _salesTerritoryHistories = new List<SalesTerritoryHistory>();
        public virtual IList<SalesTerritoryHistory> SalesTerritoryHistories
        {
            get
            {
                return this._salesTerritoryHistories;
            }
        }

        private CountryRegion _countryRegion;
        public virtual CountryRegion CountryRegion
        {
            get
            {
                return this._countryRegion;
            }
            set
            {
                this._countryRegion = value;
            }
        }

        private IList<SalesPerson> _salesPeople = new List<SalesPerson>();
        public virtual IList<SalesPerson> SalesPeople
        {
            get
            {
                return this._salesPeople;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

        private IList<Customer> _customers = new List<Customer>();
        public virtual IList<Customer> Customers
        {
            get
            {
                return this._customers;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesTaxRate
    {
        private int _salesTaxRateID;
        public virtual int SalesTaxRateID
        {
            get
            {
                return this._salesTaxRateID;
            }
            set
            {
                this._salesTaxRateID = value;
            }
        }

        private int _stateProvinceID;
        public virtual int StateProvinceID
        {
            get
            {
                return this._stateProvinceID;
            }
            set
            {
                this._stateProvinceID = value;
            }
        }

        private byte _taxType;
        public virtual byte TaxType
        {
            get
            {
                return this._taxType;
            }
            set
            {
                this._taxType = value;
            }
        }

        private decimal _taxRate;
        public virtual decimal TaxRate
        {
            get
            {
                return this._taxRate;
            }
            set
            {
                this._taxRate = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private StateProvince _stateProvince;
        public virtual StateProvince StateProvince
        {
            get
            {
                return this._stateProvince;
            }
            set
            {
                this._stateProvince = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesReason
    {
        private int _salesReasonID;
        public virtual int SalesReasonID
        {
            get
            {
                return this._salesReasonID;
            }
            set
            {
                this._salesReasonID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private string _reasonType;
        public virtual string ReasonType
        {
            get
            {
                return this._reasonType;
            }
            set
            {
                this._reasonType = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeaderSalesReason> _salesOrderHeaderSalesReasons = new List<SalesOrderHeaderSalesReason>();
        public virtual IList<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
        {
            get
            {
                return this._salesOrderHeaderSalesReasons;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesPersonQuotaHistory
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private DateTime _quotaDate;
        public virtual DateTime QuotaDate
        {
            get
            {
                return this._quotaDate;
            }
            set
            {
                this._quotaDate = value;
            }
        }

        private decimal _salesQuota;
        public virtual decimal SalesQuota
        {
            get
            {
                return this._salesQuota;
            }
            set
            {
                this._salesQuota = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private SalesPerson _salesPerson;
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return this._salesPerson;
            }
            set
            {
                this._salesPerson = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesPerson
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int? _territoryID;
        public virtual int? TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private decimal? _salesQuota;
        public virtual decimal? SalesQuota
        {
            get
            {
                return this._salesQuota;
            }
            set
            {
                this._salesQuota = value;
            }
        }

        private decimal _bonus;
        public virtual decimal Bonus
        {
            get
            {
                return this._bonus;
            }
            set
            {
                this._bonus = value;
            }
        }

        private decimal _commissionPct;
        public virtual decimal CommissionPct
        {
            get
            {
                return this._commissionPct;
            }
            set
            {
                this._commissionPct = value;
            }
        }

        private decimal _salesYTD;
        public virtual decimal SalesYTD
        {
            get
            {
                return this._salesYTD;
            }
            set
            {
                this._salesYTD = value;
            }
        }

        private decimal _salesLastYear;
        public virtual decimal SalesLastYear
        {
            get
            {
                return this._salesLastYear;
            }
            set
            {
                this._salesLastYear = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<Store> _stores = new List<Store>();
        public virtual IList<Store> Stores
        {
            get
            {
                return this._stores;
            }
        }

        private IList<SalesTerritoryHistory> _salesTerritoryHistories = new List<SalesTerritoryHistory>();
        public virtual IList<SalesTerritoryHistory> SalesTerritoryHistories
        {
            get
            {
                return this._salesTerritoryHistories;
            }
        }

        private IList<SalesPersonQuotaHistory> _salesPersonQuotaHistories = new List<SalesPersonQuotaHistory>();
        public virtual IList<SalesPersonQuotaHistory> SalesPersonQuotaHistories
        {
            get
            {
                return this._salesPersonQuotaHistories;
            }
        }

        private SalesTerritory _salesTerritory;
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return this._salesTerritory;
            }
            set
            {
                this._salesTerritory = value;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesOrderHeaderSalesReason
    {
        private int _salesOrderID;
        public virtual int SalesOrderID
        {
            get
            {
                return this._salesOrderID;
            }
            set
            {
                this._salesOrderID = value;
            }
        }

        private int _salesReasonID;
        public virtual int SalesReasonID
        {
            get
            {
                return this._salesReasonID;
            }
            set
            {
                this._salesReasonID = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private SalesOrderHeader _salesOrderHeader;
        public virtual SalesOrderHeader SalesOrderHeader
        {
            get
            {
                return this._salesOrderHeader;
            }
            set
            {
                this._salesOrderHeader = value;
            }
        }

        private SalesReason _salesReason;
        public virtual SalesReason SalesReason
        {
            get
            {
                return this._salesReason;
            }
            set
            {
                this._salesReason = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesOrderHeader
    {
        private int _salesOrderID;
        public virtual int SalesOrderID
        {
            get
            {
                return this._salesOrderID;
            }
            set
            {
                this._salesOrderID = value;
            }
        }

        private byte _revisionNumber;
        public virtual byte RevisionNumber
        {
            get
            {
                return this._revisionNumber;
            }
            set
            {
                this._revisionNumber = value;
            }
        }

        private DateTime _orderDate;
        public virtual DateTime OrderDate
        {
            get
            {
                return this._orderDate;
            }
            set
            {
                this._orderDate = value;
            }
        }

        private DateTime _dueDate;
        public virtual DateTime DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                this._dueDate = value;
            }
        }

        private DateTime? _shipDate;
        public virtual DateTime? ShipDate
        {
            get
            {
                return this._shipDate;
            }
            set
            {
                this._shipDate = value;
            }
        }

        private byte _status;
        public virtual byte Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }

        private bool _onlineOrderFlag;
        public virtual bool OnlineOrderFlag
        {
            get
            {
                return this._onlineOrderFlag;
            }
            set
            {
                this._onlineOrderFlag = value;
            }
        }

        private string _salesOrderNumber;
        public virtual string SalesOrderNumber
        {
            get
            {
                return this._salesOrderNumber;
            }
            set
            {
                this._salesOrderNumber = value;
            }
        }

        private string _purchaseOrderNumber;
        public virtual string PurchaseOrderNumber
        {
            get
            {
                return this._purchaseOrderNumber;
            }
            set
            {
                this._purchaseOrderNumber = value;
            }
        }

        private string _accountNumber;
        public virtual string AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }

        private int _customerID;
        public virtual int CustomerID
        {
            get
            {
                return this._customerID;
            }
            set
            {
                this._customerID = value;
            }
        }

        private int? _salesPersonID;
        public virtual int? SalesPersonID
        {
            get
            {
                return this._salesPersonID;
            }
            set
            {
                this._salesPersonID = value;
            }
        }

        private int? _territoryID;
        public virtual int? TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private int _billToAddressID;
        public virtual int BillToAddressID
        {
            get
            {
                return this._billToAddressID;
            }
            set
            {
                this._billToAddressID = value;
            }
        }

        private int _shipToAddressID;
        public virtual int ShipToAddressID
        {
            get
            {
                return this._shipToAddressID;
            }
            set
            {
                this._shipToAddressID = value;
            }
        }

        private int _shipMethodID;
        public virtual int ShipMethodID
        {
            get
            {
                return this._shipMethodID;
            }
            set
            {
                this._shipMethodID = value;
            }
        }

        private int? _creditCardID;
        public virtual int? CreditCardID
        {
            get
            {
                return this._creditCardID;
            }
            set
            {
                this._creditCardID = value;
            }
        }

        private string _creditCardApprovalCode;
        public virtual string CreditCardApprovalCode
        {
            get
            {
                return this._creditCardApprovalCode;
            }
            set
            {
                this._creditCardApprovalCode = value;
            }
        }

        private int? _currencyRateID;
        public virtual int? CurrencyRateID
        {
            get
            {
                return this._currencyRateID;
            }
            set
            {
                this._currencyRateID = value;
            }
        }

        private decimal _subTotal;
        public virtual decimal SubTotal
        {
            get
            {
                return this._subTotal;
            }
            set
            {
                this._subTotal = value;
            }
        }

        private decimal _taxAmt;
        public virtual decimal TaxAmt
        {
            get
            {
                return this._taxAmt;
            }
            set
            {
                this._taxAmt = value;
            }
        }

        private decimal _freight;
        public virtual decimal Freight
        {
            get
            {
                return this._freight;
            }
            set
            {
                this._freight = value;
            }
        }

        private decimal _totalDue;
        public virtual decimal TotalDue
        {
            get
            {
                return this._totalDue;
            }
            set
            {
                this._totalDue = value;
            }
        }

        private string _comment;
        public virtual string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                this._comment = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeaderSalesReason> _salesOrderHeaderSalesReasons = new List<SalesOrderHeaderSalesReason>();
        public virtual IList<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
        {
            get
            {
                return this._salesOrderHeaderSalesReasons;
            }
        }

        private Address _address;
        public virtual Address Address
        {
            get
            {
                return this._address;
            }
            set
            {
                this._address = value;
            }
        }

        private Address _address1;
        public virtual Address Address1
        {
            get
            {
                return this._address1;
            }
            set
            {
                this._address1 = value;
            }
        }

        private CreditCard _creditCard;
        public virtual CreditCard CreditCard
        {
            get
            {
                return this._creditCard;
            }
            set
            {
                this._creditCard = value;
            }
        }

        private CurrencyRate _currencyRate;
        public virtual CurrencyRate CurrencyRate
        {
            get
            {
                return this._currencyRate;
            }
            set
            {
                this._currencyRate = value;
            }
        }

        private Customer _customer;
        public virtual Customer Customer
        {
            get
            {
                return this._customer;
            }
            set
            {
                this._customer = value;
            }
        }

        private SalesPerson _salesPerson;
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return this._salesPerson;
            }
            set
            {
                this._salesPerson = value;
            }
        }

        private SalesTerritory _salesTerritory;
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return this._salesTerritory;
            }
            set
            {
                this._salesTerritory = value;
            }
        }

        private IList<SalesOrderDetail> _salesOrderDetails = new List<SalesOrderDetail>();
        public virtual IList<SalesOrderDetail> SalesOrderDetails
        {
            get
            {
                return this._salesOrderDetails;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class SalesOrderDetail
    {
        private int _salesOrderID;
        public virtual int SalesOrderID
        {
            get
            {
                return this._salesOrderID;
            }
            set
            {
                this._salesOrderID = value;
            }
        }

        private int _salesOrderDetailID;
        public virtual int SalesOrderDetailID
        {
            get
            {
                return this._salesOrderDetailID;
            }
            set
            {
                this._salesOrderDetailID = value;
            }
        }

        private string _carrierTrackingNumber;
        public virtual string CarrierTrackingNumber
        {
            get
            {
                return this._carrierTrackingNumber;
            }
            set
            {
                this._carrierTrackingNumber = value;
            }
        }

        private short _orderQty;
        public virtual short OrderQty
        {
            get
            {
                return this._orderQty;
            }
            set
            {
                this._orderQty = value;
            }
        }

        private int _productID;
        public virtual int ProductID
        {
            get
            {
                return this._productID;
            }
            set
            {
                this._productID = value;
            }
        }

        private int _specialOfferID;
        public virtual int SpecialOfferID
        {
            get
            {
                return this._specialOfferID;
            }
            set
            {
                this._specialOfferID = value;
            }
        }

        private decimal _unitPrice;
        public virtual decimal UnitPrice
        {
            get
            {
                return this._unitPrice;
            }
            set
            {
                this._unitPrice = value;
            }
        }

        private decimal _unitPriceDiscount;
        public virtual decimal UnitPriceDiscount
        {
            get
            {
                return this._unitPriceDiscount;
            }
            set
            {
                this._unitPriceDiscount = value;
            }
        }

        private decimal _lineTotal;
        public virtual decimal LineTotal
        {
            get
            {
                return this._lineTotal;
            }
            set
            {
                this._lineTotal = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private SalesOrderHeader _salesOrderHeader;
        public virtual SalesOrderHeader SalesOrderHeader
        {
            get
            {
                return this._salesOrderHeader;
            }
            set
            {
                this._salesOrderHeader = value;
            }
        }

        private SpecialOfferProduct _specialOfferProduct;
        public virtual SpecialOfferProduct SpecialOfferProduct
        {
            get
            {
                return this._specialOfferProduct;
            }
            set
            {
                this._specialOfferProduct = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class PhoneNumberType
    {
        private int _phoneNumberTypeID;
        public virtual int PhoneNumberTypeID
        {
            get
            {
                return this._phoneNumberTypeID;
            }
            set
            {
                this._phoneNumberTypeID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<PersonPhone> _personPhones = new List<PersonPhone>();
        public virtual IList<PersonPhone> PersonPhones
        {
            get
            {
                return this._personPhones;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class PersonPhone
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private string _phoneNumber;
        public virtual string PhoneNumber
        {
            get
            {
                return this._phoneNumber;
            }
            set
            {
                this._phoneNumber = value;
            }
        }

        private int _phoneNumberTypeID;
        public virtual int PhoneNumberTypeID
        {
            get
            {
                return this._phoneNumberTypeID;
            }
            set
            {
                this._phoneNumberTypeID = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

        private PhoneNumberType _phoneNumberType;
        public virtual PhoneNumberType PhoneNumberType
        {
            get
            {
                return this._phoneNumberType;
            }
            set
            {
                this._phoneNumberType = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class PersonCreditCard
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int _creditCardID;
        public virtual int CreditCardID
        {
            get
            {
                return this._creditCardID;
            }
            set
            {
                this._creditCardID = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private CreditCard _creditCard;
        public virtual CreditCard CreditCard
        {
            get
            {
                return this._creditCard;
            }
            set
            {
                this._creditCard = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class Person
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private string _personType;
        public virtual string PersonType
        {
            get
            {
                return this._personType;
            }
            set
            {
                this._personType = value;
            }
        }

        private bool _nameStyle;
        public virtual bool NameStyle
        {
            get
            {
                return this._nameStyle;
            }
            set
            {
                this._nameStyle = value;
            }
        }

        private string _title;
        public virtual string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                this._title = value;
            }
        }

        private string _firstName;
        public virtual string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                this._firstName = value;
            }
        }

        private string _middleName;
        public virtual string MiddleName
        {
            get
            {
                return this._middleName;
            }
            set
            {
                this._middleName = value;
            }
        }

        private string _lastName;
        public virtual string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                this._lastName = value;
            }
        }

        private string _suffix;
        public virtual string Suffix
        {
            get
            {
                return this._suffix;
            }
            set
            {
                this._suffix = value;
            }
        }

        private int _emailPromotion;
        public virtual int EmailPromotion
        {
            get
            {
                return this._emailPromotion;
            }
            set
            {
                this._emailPromotion = value;
            }
        }

        private string _additionalContactInfo;
        public virtual string AdditionalContactInfo
        {
            get
            {
                return this._additionalContactInfo;
            }
            set
            {
                this._additionalContactInfo = value;
            }
        }

        private string _demographics;
        public virtual string Demographics
        {
            get
            {
                return this._demographics;
            }
            set
            {
                this._demographics = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<PersonPhone> _personPhones = new List<PersonPhone>();
        public virtual IList<PersonPhone> PersonPhones
        {
            get
            {
                return this._personPhones;
            }
        }

        private IList<PersonCreditCard> _personCreditCards = new List<PersonCreditCard>();
        public virtual IList<PersonCreditCard> PersonCreditCards
        {
            get
            {
                return this._personCreditCards;
            }
        }

        private BusinessEntity _businessEntity;
        public virtual BusinessEntity BusinessEntity
        {
            get
            {
                return this._businessEntity;
            }
            set
            {
                this._businessEntity = value;
            }
        }

        private Password _password;
        public virtual Password Password
        {
            get
            {
                return this._password;
            }
            set
            {
                this._password = value;
            }
        }

        private IList<EmailAddress> _emailAddresses = new List<EmailAddress>();
        public virtual IList<EmailAddress> EmailAddresses
        {
            get
            {
                return this._emailAddresses;
            }
        }

        private IList<Customer> _customers = new List<Customer>();
        public virtual IList<Customer> Customers
        {
            get
            {
                return this._customers;
            }
        }

        private IList<BusinessEntityContact> _businessEntityContacts = new List<BusinessEntityContact>();
        public virtual IList<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return this._businessEntityContacts;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class Password
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private string _passwordHash;
        public virtual string PasswordHash
        {
            get
            {
                return this._passwordHash;
            }
            set
            {
                this._passwordHash = value;
            }
        }

        private string _passwordSalt;
        public virtual string PasswordSalt
        {
            get
            {
                return this._passwordSalt;
            }
            set
            {
                this._passwordSalt = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class EmailAddress
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int _emailAddressID;
        public virtual int EmailAddressID
        {
            get
            {
                return this._emailAddressID;
            }
            set
            {
                this._emailAddressID = value;
            }
        }

        private string _emailAddress1;
        public virtual string EmailAddress1
        {
            get
            {
                return this._emailAddress1;
            }
            set
            {
                this._emailAddress1 = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class Customer
    {
        private int _customerID;
        public virtual int CustomerID
        {
            get
            {
                return this._customerID;
            }
            set
            {
                this._customerID = value;
            }
        }

        private int? _personID;
        public virtual int? PersonID
        {
            get
            {
                return this._personID;
            }
            set
            {
                this._personID = value;
            }
        }

        private int? _storeID;
        public virtual int? StoreID
        {
            get
            {
                return this._storeID;
            }
            set
            {
                this._storeID = value;
            }
        }

        private int? _territoryID;
        public virtual int? TerritoryID
        {
            get
            {
                return this._territoryID;
            }
            set
            {
                this._territoryID = value;
            }
        }

        private string _accountNumber;
        public virtual string AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

        private SalesTerritory _salesTerritory;
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return this._salesTerritory;
            }
            set
            {
                this._salesTerritory = value;
            }
        }

        private Store _store;
        public virtual Store Store
        {
            get
            {
                return this._store;
            }
            set
            {
                this._store = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class CurrencyRate
    {
        private int _currencyRateID;
        public virtual int CurrencyRateID
        {
            get
            {
                return this._currencyRateID;
            }
            set
            {
                this._currencyRateID = value;
            }
        }

        private DateTime _currencyRateDate;
        public virtual DateTime CurrencyRateDate
        {
            get
            {
                return this._currencyRateDate;
            }
            set
            {
                this._currencyRateDate = value;
            }
        }

        private string _fromCurrencyCode;
        public virtual string FromCurrencyCode
        {
            get
            {
                return this._fromCurrencyCode;
            }
            set
            {
                this._fromCurrencyCode = value;
            }
        }

        private string _toCurrencyCode;
        public virtual string ToCurrencyCode
        {
            get
            {
                return this._toCurrencyCode;
            }
            set
            {
                this._toCurrencyCode = value;
            }
        }

        private decimal _averageRate;
        public virtual decimal AverageRate
        {
            get
            {
                return this._averageRate;
            }
            set
            {
                this._averageRate = value;
            }
        }

        private decimal _endOfDayRate;
        public virtual decimal EndOfDayRate
        {
            get
            {
                return this._endOfDayRate;
            }
            set
            {
                this._endOfDayRate = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

        private Currency _currency;
        public virtual Currency Currency
        {
            get
            {
                return this._currency;
            }
            set
            {
                this._currency = value;
            }
        }

        private Currency _currency1;
        public virtual Currency Currency1
        {
            get
            {
                return this._currency1;
            }
            set
            {
                this._currency1 = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class Currency
    {
        private string _currencyCode;
        public virtual string CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<CurrencyRate> _currencyRates = new List<CurrencyRate>();
        public virtual IList<CurrencyRate> CurrencyRates
        {
            get
            {
                return this._currencyRates;
            }
        }

        private IList<CurrencyRate> _currencyRates1 = new List<CurrencyRate>();
        public virtual IList<CurrencyRate> CurrencyRates1
        {
            get
            {
                return this._currencyRates1;
            }
        }

        private IList<CountryRegionCurrency> _countryRegionCurrencies = new List<CountryRegionCurrency>();
        public virtual IList<CountryRegionCurrency> CountryRegionCurrencies
        {
            get
            {
                return this._countryRegionCurrencies;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class CreditCard
    {
        private int _creditCardID;
        public virtual int CreditCardID
        {
            get
            {
                return this._creditCardID;
            }
            set
            {
                this._creditCardID = value;
            }
        }

        private string _cardType;
        public virtual string CardType
        {
            get
            {
                return this._cardType;
            }
            set
            {
                this._cardType = value;
            }
        }

        private string _cardNumber;
        public virtual string CardNumber
        {
            get
            {
                return this._cardNumber;
            }
            set
            {
                this._cardNumber = value;
            }
        }

        private byte _expMonth;
        public virtual byte ExpMonth
        {
            get
            {
                return this._expMonth;
            }
            set
            {
                this._expMonth = value;
            }
        }

        private short _expYear;
        public virtual short ExpYear
        {
            get
            {
                return this._expYear;
            }
            set
            {
                this._expYear = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

        private IList<PersonCreditCard> _personCreditCards = new List<PersonCreditCard>();
        public virtual IList<PersonCreditCard> PersonCreditCards
        {
            get
            {
                return this._personCreditCards;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class CountryRegionCurrency
    {
        private string _countryRegionCode;
        public virtual string CountryRegionCode
        {
            get
            {
                return this._countryRegionCode;
            }
            set
            {
                this._countryRegionCode = value;
            }
        }

        private string _currencyCode;
        public virtual string CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private CountryRegion _countryRegion;
        public virtual CountryRegion CountryRegion
        {
            get
            {
                return this._countryRegion;
            }
            set
            {
                this._countryRegion = value;
            }
        }

        private Currency _currency;
        public virtual Currency Currency
        {
            get
            {
                return this._currency;
            }
            set
            {
                this._currency = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class CountryRegion
    {
        private string _countryRegionCode;
        public virtual string CountryRegionCode
        {
            get
            {
                return this._countryRegionCode;
            }
            set
            {
                this._countryRegionCode = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<StateProvince> _stateProvinces = new List<StateProvince>();
        public virtual IList<StateProvince> StateProvinces
        {
            get
            {
                return this._stateProvinces;
            }
        }

        private IList<SalesTerritory> _salesTerritories = new List<SalesTerritory>();
        public virtual IList<SalesTerritory> SalesTerritories
        {
            get
            {
                return this._salesTerritories;
            }
        }

        private IList<CountryRegionCurrency> _countryRegionCurrencies = new List<CountryRegionCurrency>();
        public virtual IList<CountryRegionCurrency> CountryRegionCurrencies
        {
            get
            {
                return this._countryRegionCurrencies;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class ContactType
    {
        private int _contactTypeID;
        public virtual int ContactTypeID
        {
            get
            {
                return this._contactTypeID;
            }
            set
            {
                this._contactTypeID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<BusinessEntityContact> _businessEntityContacts = new List<BusinessEntityContact>();
        public virtual IList<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return this._businessEntityContacts;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class BusinessEntityContact
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int _personID;
        public virtual int PersonID
        {
            get
            {
                return this._personID;
            }
            set
            {
                this._personID = value;
            }
        }

        private int _contactTypeID;
        public virtual int ContactTypeID
        {
            get
            {
                return this._contactTypeID;
            }
            set
            {
                this._contactTypeID = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private BusinessEntity _businessEntity;
        public virtual BusinessEntity BusinessEntity
        {
            get
            {
                return this._businessEntity;
            }
            set
            {
                this._businessEntity = value;
            }
        }

        private ContactType _contactType;
        public virtual ContactType ContactType
        {
            get
            {
                return this._contactType;
            }
            set
            {
                this._contactType = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class BusinessEntityAddress
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private int _addressID;
        public virtual int AddressID
        {
            get
            {
                return this._addressID;
            }
            set
            {
                this._addressID = value;
            }
        }

        private int _addressTypeID;
        public virtual int AddressTypeID
        {
            get
            {
                return this._addressTypeID;
            }
            set
            {
                this._addressTypeID = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private Address _address;
        public virtual Address Address
        {
            get
            {
                return this._address;
            }
            set
            {
                this._address = value;
            }
        }

        private AddressType _addressType;
        public virtual AddressType AddressType
        {
            get
            {
                return this._addressType;
            }
            set
            {
                this._addressType = value;
            }
        }

        private BusinessEntity _businessEntity;
        public virtual BusinessEntity BusinessEntity
        {
            get
            {
                return this._businessEntity;
            }
            set
            {
                this._businessEntity = value;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class BusinessEntity
    {
        private int _businessEntityID;
        public virtual int BusinessEntityID
        {
            get
            {
                return this._businessEntityID;
            }
            set
            {
                this._businessEntityID = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private Store _store;
        public virtual Store Store
        {
            get
            {
                return this._store;
            }
            set
            {
                this._store = value;
            }
        }

        private Person _person;
        public virtual Person Person
        {
            get
            {
                return this._person;
            }
            set
            {
                this._person = value;
            }
        }

        private IList<BusinessEntityContact> _businessEntityContacts = new List<BusinessEntityContact>();
        public virtual IList<BusinessEntityContact> BusinessEntityContacts
        {
            get
            {
                return this._businessEntityContacts;
            }
        }

        private IList<BusinessEntityAddress> _businessEntityAddresses = new List<BusinessEntityAddress>();
        public virtual IList<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return this._businessEntityAddresses;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class AddressType
    {
        private int _addressTypeID;
        public virtual int AddressTypeID
        {
            get
            {
                return this._addressTypeID;
            }
            set
            {
                this._addressTypeID = value;
            }
        }

        private string _name;
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<BusinessEntityAddress> _businessEntityAddresses = new List<BusinessEntityAddress>();
        public virtual IList<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return this._businessEntityAddresses;
            }
        }

    }
}
namespace TDA.Bencher
{
    public partial class Address
    {
        private int _addressID;
        public virtual int AddressID
        {
            get
            {
                return this._addressID;
            }
            set
            {
                this._addressID = value;
            }
        }

        private string _addressLine1;
        public virtual string AddressLine1
        {
            get
            {
                return this._addressLine1;
            }
            set
            {
                this._addressLine1 = value;
            }
        }

        private string _addressLine2;
        public virtual string AddressLine2
        {
            get
            {
                return this._addressLine2;
            }
            set
            {
                this._addressLine2 = value;
            }
        }

        private string _city;
        public virtual string City
        {
            get
            {
                return this._city;
            }
            set
            {
                this._city = value;
            }
        }

        private int _stateProvinceID;
        public virtual int StateProvinceID
        {
            get
            {
                return this._stateProvinceID;
            }
            set
            {
                this._stateProvinceID = value;
            }
        }

        private string _postalCode;
        public virtual string PostalCode
        {
            get
            {
                return this._postalCode;
            }
            set
            {
                this._postalCode = value;
            }
        }

        private SqlGeography _spatialLocation;
        public virtual SqlGeography SpatialLocation
        {
            get
            {
                return this._spatialLocation;
            }
            set
            {
                this._spatialLocation = value;
            }
        }

        private Guid _rowguid;
        public virtual Guid Rowguid
        {
            get
            {
                return this._rowguid;
            }
            set
            {
                this._rowguid = value;
            }
        }

        private DateTime _modifiedDate;
        public virtual DateTime ModifiedDate
        {
            get
            {
                return this._modifiedDate;
            }
            set
            {
                this._modifiedDate = value;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders
        {
            get
            {
                return this._salesOrderHeaders;
            }
        }

        private IList<SalesOrderHeader> _salesOrderHeaders1 = new List<SalesOrderHeader>();
        public virtual IList<SalesOrderHeader> SalesOrderHeaders1
        {
            get
            {
                return this._salesOrderHeaders1;
            }
        }

        private IList<BusinessEntityAddress> _businessEntityAddresses = new List<BusinessEntityAddress>();
        public virtual IList<BusinessEntityAddress> BusinessEntityAddresses
        {
            get
            {
                return this._businessEntityAddresses;
            }
        }

        private StateProvince _stateProvince;
        public virtual StateProvince StateProvince
        {
            get
            {
                return this._stateProvince;
            }
            set
            {
                this._stateProvince = value;
            }
        }

    }
}
namespace TDA.Bencher
{

    public partial class FluentModelMetadataSource : FluentMetadataSource
    {
        private static MetadataContainer _metadata = null;
        private static object _syncRoot = new object();

        protected override MetadataContainer CreateModel()
        {
            return base.CreateModel();
            //if (_metadata != null)
            //    return _metadata;

            //Monitor.Enter(_syncRoot);
            //_metadata = base.CreateModel();
            //Monitor.Exit(_syncRoot);
            //return _metadata;
        }

        protected override IList<MappingConfiguration> PrepareMapping()
        {
            List<MappingConfiguration> mappingConfigurations = new List<MappingConfiguration>();

            MappingConfiguration<Store> storeConfiguration = this.GetStoreMappingConfiguration();
            mappingConfigurations.Add(storeConfiguration);

            MappingConfiguration<StateProvince> stateprovinceConfiguration = this.GetStateProvinceMappingConfiguration();
            mappingConfigurations.Add(stateprovinceConfiguration);

            MappingConfiguration<SpecialOfferProduct> specialofferproductConfiguration = this.GetSpecialOfferProductMappingConfiguration();
            mappingConfigurations.Add(specialofferproductConfiguration);

            MappingConfiguration<SpecialOffer> specialofferConfiguration = this.GetSpecialOfferMappingConfiguration();
            mappingConfigurations.Add(specialofferConfiguration);

            MappingConfiguration<ShoppingCartItem> shoppingcartitemConfiguration = this.GetShoppingCartItemMappingConfiguration();
            mappingConfigurations.Add(shoppingcartitemConfiguration);

            MappingConfiguration<SalesTerritoryHistory> salesterritoryhistoryConfiguration = this.GetSalesTerritoryHistoryMappingConfiguration();
            mappingConfigurations.Add(salesterritoryhistoryConfiguration);

            MappingConfiguration<SalesTerritory> salesterritoryConfiguration = this.GetSalesTerritoryMappingConfiguration();
            mappingConfigurations.Add(salesterritoryConfiguration);

            MappingConfiguration<SalesTaxRate> salestaxrateConfiguration = this.GetSalesTaxRateMappingConfiguration();
            mappingConfigurations.Add(salestaxrateConfiguration);

            MappingConfiguration<SalesReason> salesreasonConfiguration = this.GetSalesReasonMappingConfiguration();
            mappingConfigurations.Add(salesreasonConfiguration);

            MappingConfiguration<SalesPersonQuotaHistory> salespersonquotahistoryConfiguration = this.GetSalesPersonQuotaHistoryMappingConfiguration();
            mappingConfigurations.Add(salespersonquotahistoryConfiguration);

            MappingConfiguration<SalesPerson> salespersonConfiguration = this.GetSalesPersonMappingConfiguration();
            mappingConfigurations.Add(salespersonConfiguration);

            MappingConfiguration<SalesOrderHeaderSalesReason> salesorderheadersalesreasonConfiguration = this.GetSalesOrderHeaderSalesReasonMappingConfiguration();
            mappingConfigurations.Add(salesorderheadersalesreasonConfiguration);

            MappingConfiguration<SalesOrderHeader> salesorderheaderConfiguration = this.GetSalesOrderHeaderMappingConfiguration();
            mappingConfigurations.Add(salesorderheaderConfiguration);

            MappingConfiguration<SalesOrderDetail> salesorderdetailConfiguration = this.GetSalesOrderDetailMappingConfiguration();
            mappingConfigurations.Add(salesorderdetailConfiguration);

            MappingConfiguration<PhoneNumberType> phonenumbertypeConfiguration = this.GetPhoneNumberTypeMappingConfiguration();
            mappingConfigurations.Add(phonenumbertypeConfiguration);

            MappingConfiguration<PersonPhone> personphoneConfiguration = this.GetPersonPhoneMappingConfiguration();
            mappingConfigurations.Add(personphoneConfiguration);

            MappingConfiguration<PersonCreditCard> personcreditcardConfiguration = this.GetPersonCreditCardMappingConfiguration();
            mappingConfigurations.Add(personcreditcardConfiguration);

            MappingConfiguration<Person> personConfiguration = this.GetPersonMappingConfiguration();
            mappingConfigurations.Add(personConfiguration);

            MappingConfiguration<Password> passwordConfiguration = this.GetPasswordMappingConfiguration();
            mappingConfigurations.Add(passwordConfiguration);

            MappingConfiguration<EmailAddress> emailaddressConfiguration = this.GetEmailAddressMappingConfiguration();
            mappingConfigurations.Add(emailaddressConfiguration);

            MappingConfiguration<Customer> customerConfiguration = this.GetCustomerMappingConfiguration();
            mappingConfigurations.Add(customerConfiguration);

            MappingConfiguration<CurrencyRate> currencyrateConfiguration = this.GetCurrencyRateMappingConfiguration();
            mappingConfigurations.Add(currencyrateConfiguration);

            MappingConfiguration<Currency> currencyConfiguration = this.GetCurrencyMappingConfiguration();
            mappingConfigurations.Add(currencyConfiguration);

            MappingConfiguration<CreditCard> creditcardConfiguration = this.GetCreditCardMappingConfiguration();
            mappingConfigurations.Add(creditcardConfiguration);

            MappingConfiguration<CountryRegionCurrency> countryregioncurrencyConfiguration = this.GetCountryRegionCurrencyMappingConfiguration();
            mappingConfigurations.Add(countryregioncurrencyConfiguration);

            MappingConfiguration<CountryRegion> countryregionConfiguration = this.GetCountryRegionMappingConfiguration();
            mappingConfigurations.Add(countryregionConfiguration);

            MappingConfiguration<ContactType> contacttypeConfiguration = this.GetContactTypeMappingConfiguration();
            mappingConfigurations.Add(contacttypeConfiguration);

            MappingConfiguration<BusinessEntityContact> businessentitycontactConfiguration = this.GetBusinessEntityContactMappingConfiguration();
            mappingConfigurations.Add(businessentitycontactConfiguration);

            MappingConfiguration<BusinessEntityAddress> businessentityaddressConfiguration = this.GetBusinessEntityAddressMappingConfiguration();
            mappingConfigurations.Add(businessentityaddressConfiguration);

            MappingConfiguration<BusinessEntity> businessentityConfiguration = this.GetBusinessEntityMappingConfiguration();
            mappingConfigurations.Add(businessentityConfiguration);

            MappingConfiguration<AddressType> addresstypeConfiguration = this.GetAddressTypeMappingConfiguration();
            mappingConfigurations.Add(addresstypeConfiguration);

            MappingConfiguration<Address> addressConfiguration = this.GetAddressMappingConfiguration();
            mappingConfigurations.Add(addressConfiguration);


            return mappingConfigurations;
        }

        protected override void SetContainerSettings(MetadataContainer container)
        {
            container.Name = "FluentModel";
            container.DefaultNamespace = "TDA.Bencher";
            container.NameGenerator.SourceStrategy = Telerik.OpenAccess.Metadata.NamingSourceStrategy.Property;
            container.NameGenerator.RemoveCamelCase = false;
        }
        public MappingConfiguration<Store> GetStoreMappingConfiguration()
        {
            MappingConfiguration<Store> configuration = this.GetStoreClassConfiguration();
            this.PrepareStorePropertyConfigurations(configuration);
            this.PrepareStoreAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Store> GetStoreClassConfiguration()
        {
            MappingConfiguration<Store> configuration = new MappingConfiguration<Store>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.Store");

            return configuration;
        }

        public void PrepareStorePropertyConfigurations(MappingConfiguration<Store> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.SalesPersonID).HasFieldName("_salesPersonID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesPersonID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Demographics).HasFieldName("_demographics").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Demographics").IsNullable().HasColumnType("xml").HasLength(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareStoreAssociationConfigurations(MappingConfiguration<Store> configuration)
        {
            configuration.HasAssociation(x => x.BusinessEntity).HasFieldName("_businessEntity").WithOpposite(x => x.Store).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesPerson).HasFieldName("_salesPerson").WithOpposite(x => x.Stores).ToColumn("SalesPersonID").HasConstraint((x, y) => x.SalesPersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Customers).HasFieldName("_customers").WithOpposite(x => x.Store).ToColumn("StoreID").HasConstraint((y, x) => x.StoreID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<StateProvince> GetStateProvinceMappingConfiguration()
        {
            MappingConfiguration<StateProvince> configuration = this.GetStateProvinceClassConfiguration();
            this.PrepareStateProvincePropertyConfigurations(configuration);
            this.PrepareStateProvinceAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<StateProvince> GetStateProvinceClassConfiguration()
        {
            MappingConfiguration<StateProvince> configuration = new MappingConfiguration<StateProvince>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.StateProvince");

            return configuration;
        }

        public void PrepareStateProvincePropertyConfigurations(MappingConfiguration<StateProvince> configuration)
        {
            configuration.HasProperty(x => x.StateProvinceID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_stateProvinceID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StateProvinceID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.StateProvinceCode).HasFieldName("_stateProvinceCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StateProvinceCode").IsNotNullable().HasColumnType("nchar").HasLength(3);
            configuration.HasProperty(x => x.CountryRegionCode).HasFieldName("_countryRegionCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CountryRegionCode").IsNotNullable().HasColumnType("nvarchar").HasLength(3);
            configuration.HasProperty(x => x.IsOnlyStateProvinceFlag).HasFieldName("_isOnlyStateProvinceFlag").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("IsOnlyStateProvinceFlag").IsNotNullable().HasColumnType("'Flag'").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.TerritoryID).HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareStateProvinceAssociationConfigurations(MappingConfiguration<StateProvince> configuration)
        {
            configuration.HasAssociation(x => x.CountryRegion).HasFieldName("_countryRegion").WithOpposite(x => x.StateProvinces).ToColumn("CountryRegionCode").HasConstraint((x, y) => x.CountryRegionCode == y.CountryRegionCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritory).HasFieldName("_salesTerritory").WithOpposite(x => x.StateProvinces).ToColumn("TerritoryID").HasConstraint((x, y) => x.TerritoryID == y.TerritoryID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTaxRates).HasFieldName("_salesTaxRates").WithOpposite(x => x.StateProvince).ToColumn("StateProvinceID").HasConstraint((y, x) => x.StateProvinceID == y.StateProvinceID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Addresses).HasFieldName("_addresses").WithOpposite(x => x.StateProvince).ToColumn("StateProvinceID").HasConstraint((y, x) => x.StateProvinceID == y.StateProvinceID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SpecialOfferProduct> GetSpecialOfferProductMappingConfiguration()
        {
            MappingConfiguration<SpecialOfferProduct> configuration = this.GetSpecialOfferProductClassConfiguration();
            this.PrepareSpecialOfferProductPropertyConfigurations(configuration);
            this.PrepareSpecialOfferProductAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SpecialOfferProduct> GetSpecialOfferProductClassConfiguration()
        {
            MappingConfiguration<SpecialOfferProduct> configuration = new MappingConfiguration<SpecialOfferProduct>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SpecialOfferProduct");

            return configuration;
        }

        public void PrepareSpecialOfferProductPropertyConfigurations(MappingConfiguration<SpecialOfferProduct> configuration)
        {
            configuration.HasProperty(x => x.SpecialOfferID).IsIdentity().HasFieldName("_specialOfferID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SpecialOfferID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ProductID).IsIdentity().HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSpecialOfferProductAssociationConfigurations(MappingConfiguration<SpecialOfferProduct> configuration)
        {
            configuration.HasAssociation(x => x.SpecialOffer).HasFieldName("_specialOffer").WithOpposite(x => x.SpecialOfferProducts).ToColumn("SpecialOfferID").HasConstraint((x, y) => x.SpecialOfferID == y.SpecialOfferID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesOrderDetails).HasFieldName("_salesOrderDetails").WithOpposite(x => x.SpecialOfferProduct).HasConstraint((y, x) => x.SpecialOfferID == y.SpecialOfferID && x.ProductID == y.ProductID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SpecialOffer> GetSpecialOfferMappingConfiguration()
        {
            MappingConfiguration<SpecialOffer> configuration = this.GetSpecialOfferClassConfiguration();
            this.PrepareSpecialOfferPropertyConfigurations(configuration);
            this.PrepareSpecialOfferAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SpecialOffer> GetSpecialOfferClassConfiguration()
        {
            MappingConfiguration<SpecialOffer> configuration = new MappingConfiguration<SpecialOffer>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SpecialOffer");

            return configuration;
        }

        public void PrepareSpecialOfferPropertyConfigurations(MappingConfiguration<SpecialOffer> configuration)
        {
            configuration.HasProperty(x => x.SpecialOfferID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_specialOfferID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SpecialOfferID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Description).HasFieldName("_description").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Description").IsNotNullable().HasColumnType("nvarchar").HasLength(255);
            configuration.HasProperty(x => x.DiscountPct).HasFieldName("_discountPct").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DiscountPct").IsNotNullable().HasColumnType("smallmoney").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Type).HasFieldName("_type").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Type").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.Category).HasFieldName("_category").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Category").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.StartDate).HasFieldName("_startDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StartDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.EndDate).HasFieldName("_endDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EndDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.MinQty).HasFieldName("_minQty").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MinQty").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.MaxQty).HasFieldName("_maxQty").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MaxQty").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSpecialOfferAssociationConfigurations(MappingConfiguration<SpecialOffer> configuration)
        {
            configuration.HasAssociation(x => x.SpecialOfferProducts).HasFieldName("_specialOfferProducts").WithOpposite(x => x.SpecialOffer).ToColumn("SpecialOfferID").HasConstraint((y, x) => x.SpecialOfferID == y.SpecialOfferID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<ShoppingCartItem> GetShoppingCartItemMappingConfiguration()
        {
            MappingConfiguration<ShoppingCartItem> configuration = this.GetShoppingCartItemClassConfiguration();
            this.PrepareShoppingCartItemPropertyConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<ShoppingCartItem> GetShoppingCartItemClassConfiguration()
        {
            MappingConfiguration<ShoppingCartItem> configuration = new MappingConfiguration<ShoppingCartItem>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.ShoppingCartItem");

            return configuration;
        }

        public void PrepareShoppingCartItemPropertyConfigurations(MappingConfiguration<ShoppingCartItem> configuration)
        {
            configuration.HasProperty(x => x.ShoppingCartItemID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_shoppingCartItemID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShoppingCartItemID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ShoppingCartID).HasFieldName("_shoppingCartID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShoppingCartID").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.Quantity).HasFieldName("_quantity").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Quantity").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.DateCreated).HasFieldName("_dateCreated").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DateCreated").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }
        public MappingConfiguration<SalesTerritoryHistory> GetSalesTerritoryHistoryMappingConfiguration()
        {
            MappingConfiguration<SalesTerritoryHistory> configuration = this.GetSalesTerritoryHistoryClassConfiguration();
            this.PrepareSalesTerritoryHistoryPropertyConfigurations(configuration);
            this.PrepareSalesTerritoryHistoryAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesTerritoryHistory> GetSalesTerritoryHistoryClassConfiguration()
        {
            MappingConfiguration<SalesTerritoryHistory> configuration = new MappingConfiguration<SalesTerritoryHistory>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesTerritoryHistory");

            return configuration;
        }

        public void PrepareSalesTerritoryHistoryPropertyConfigurations(MappingConfiguration<SalesTerritoryHistory> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TerritoryID).IsIdentity().HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.StartDate).IsIdentity().HasFieldName("_startDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StartDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.EndDate).HasFieldName("_endDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EndDate").IsNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesTerritoryHistoryAssociationConfigurations(MappingConfiguration<SalesTerritoryHistory> configuration)
        {
            configuration.HasAssociation(x => x.SalesPerson).HasFieldName("_salesPerson").WithOpposite(x => x.SalesTerritoryHistories).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritory).HasFieldName("_salesTerritory").WithOpposite(x => x.SalesTerritoryHistories).ToColumn("TerritoryID").HasConstraint((x, y) => x.TerritoryID == y.TerritoryID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesTerritory> GetSalesTerritoryMappingConfiguration()
        {
            MappingConfiguration<SalesTerritory> configuration = this.GetSalesTerritoryClassConfiguration();
            this.PrepareSalesTerritoryPropertyConfigurations(configuration);
            this.PrepareSalesTerritoryAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesTerritory> GetSalesTerritoryClassConfiguration()
        {
            MappingConfiguration<SalesTerritory> configuration = new MappingConfiguration<SalesTerritory>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesTerritory");

            return configuration;
        }

        public void PrepareSalesTerritoryPropertyConfigurations(MappingConfiguration<SalesTerritory> configuration)
        {
            configuration.HasProperty(x => x.TerritoryID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.CountryRegionCode).HasFieldName("_countryRegionCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CountryRegionCode").IsNotNullable().HasColumnType("nvarchar").HasLength(3);
            configuration.HasProperty(x => x.Group).HasFieldName("_group").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Group").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.SalesYTD).HasFieldName("_salesYTD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesYTD").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesLastYear).HasFieldName("_salesLastYear").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesLastYear").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CostYTD).HasFieldName("_costYTD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CostYTD").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CostLastYear).HasFieldName("_costLastYear").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CostLastYear").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesTerritoryAssociationConfigurations(MappingConfiguration<SalesTerritory> configuration)
        {
            configuration.HasAssociation(x => x.StateProvinces).HasFieldName("_stateProvinces").WithOpposite(x => x.SalesTerritory).ToColumn("TerritoryID").HasConstraint((y, x) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritoryHistories).HasFieldName("_salesTerritoryHistories").WithOpposite(x => x.SalesTerritory).ToColumn("TerritoryID").HasConstraint((y, x) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CountryRegion).HasFieldName("_countryRegion").WithOpposite(x => x.SalesTerritories).ToColumn("CountryRegionCode").HasConstraint((x, y) => x.CountryRegionCode == y.CountryRegionCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesPeople).HasFieldName("_salesPeople").WithOpposite(x => x.SalesTerritory).ToColumn("TerritoryID").HasConstraint((y, x) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.SalesTerritory).ToColumn("TerritoryID").HasConstraint((y, x) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Customers).HasFieldName("_customers").WithOpposite(x => x.SalesTerritory).ToColumn("TerritoryID").HasConstraint((y, x) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesTaxRate> GetSalesTaxRateMappingConfiguration()
        {
            MappingConfiguration<SalesTaxRate> configuration = this.GetSalesTaxRateClassConfiguration();
            this.PrepareSalesTaxRatePropertyConfigurations(configuration);
            this.PrepareSalesTaxRateAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesTaxRate> GetSalesTaxRateClassConfiguration()
        {
            MappingConfiguration<SalesTaxRate> configuration = new MappingConfiguration<SalesTaxRate>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesTaxRate");

            return configuration;
        }

        public void PrepareSalesTaxRatePropertyConfigurations(MappingConfiguration<SalesTaxRate> configuration)
        {
            configuration.HasProperty(x => x.SalesTaxRateID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_salesTaxRateID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesTaxRateID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.StateProvinceID).HasFieldName("_stateProvinceID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StateProvinceID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TaxType).HasFieldName("_taxType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TaxType").IsNotNullable().HasColumnType("tinyint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TaxRate).HasFieldName("_taxRate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TaxRate").IsNotNullable().HasColumnType("smallmoney").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesTaxRateAssociationConfigurations(MappingConfiguration<SalesTaxRate> configuration)
        {
            configuration.HasAssociation(x => x.StateProvince).HasFieldName("_stateProvince").WithOpposite(x => x.SalesTaxRates).ToColumn("StateProvinceID").HasConstraint((x, y) => x.StateProvinceID == y.StateProvinceID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesReason> GetSalesReasonMappingConfiguration()
        {
            MappingConfiguration<SalesReason> configuration = this.GetSalesReasonClassConfiguration();
            this.PrepareSalesReasonPropertyConfigurations(configuration);
            this.PrepareSalesReasonAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesReason> GetSalesReasonClassConfiguration()
        {
            MappingConfiguration<SalesReason> configuration = new MappingConfiguration<SalesReason>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesReason");

            return configuration;
        }

        public void PrepareSalesReasonPropertyConfigurations(MappingConfiguration<SalesReason> configuration)
        {
            configuration.HasProperty(x => x.SalesReasonID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_salesReasonID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesReasonID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ReasonType).HasFieldName("_reasonType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ReasonType").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesReasonAssociationConfigurations(MappingConfiguration<SalesReason> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaderSalesReasons).HasFieldName("_salesOrderHeaderSalesReasons").WithOpposite(x => x.SalesReason).ToColumn("SalesReasonID").HasConstraint((y, x) => x.SalesReasonID == y.SalesReasonID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesPersonQuotaHistory> GetSalesPersonQuotaHistoryMappingConfiguration()
        {
            MappingConfiguration<SalesPersonQuotaHistory> configuration = this.GetSalesPersonQuotaHistoryClassConfiguration();
            this.PrepareSalesPersonQuotaHistoryPropertyConfigurations(configuration);
            this.PrepareSalesPersonQuotaHistoryAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesPersonQuotaHistory> GetSalesPersonQuotaHistoryClassConfiguration()
        {
            MappingConfiguration<SalesPersonQuotaHistory> configuration = new MappingConfiguration<SalesPersonQuotaHistory>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesPersonQuotaHistory");

            return configuration;
        }

        public void PrepareSalesPersonQuotaHistoryPropertyConfigurations(MappingConfiguration<SalesPersonQuotaHistory> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.QuotaDate).IsIdentity().HasFieldName("_quotaDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("QuotaDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.SalesQuota).HasFieldName("_salesQuota").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesQuota").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesPersonQuotaHistoryAssociationConfigurations(MappingConfiguration<SalesPersonQuotaHistory> configuration)
        {
            configuration.HasAssociation(x => x.SalesPerson).HasFieldName("_salesPerson").WithOpposite(x => x.SalesPersonQuotaHistories).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesPerson> GetSalesPersonMappingConfiguration()
        {
            MappingConfiguration<SalesPerson> configuration = this.GetSalesPersonClassConfiguration();
            this.PrepareSalesPersonPropertyConfigurations(configuration);
            this.PrepareSalesPersonAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesPerson> GetSalesPersonClassConfiguration()
        {
            MappingConfiguration<SalesPerson> configuration = new MappingConfiguration<SalesPerson>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesPerson");

            return configuration;
        }

        public void PrepareSalesPersonPropertyConfigurations(MappingConfiguration<SalesPerson> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TerritoryID).HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesQuota).HasFieldName("_salesQuota").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesQuota").IsNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Bonus).HasFieldName("_bonus").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Bonus").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CommissionPct).HasFieldName("_commissionPct").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CommissionPct").IsNotNullable().HasColumnType("smallmoney").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesYTD).HasFieldName("_salesYTD").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesYTD").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesLastYear).HasFieldName("_salesLastYear").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesLastYear").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesPersonAssociationConfigurations(MappingConfiguration<SalesPerson> configuration)
        {
            configuration.HasAssociation(x => x.Stores).HasFieldName("_stores").WithOpposite(x => x.SalesPerson).ToColumn("SalesPersonID").HasConstraint((y, x) => x.SalesPersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritoryHistories).HasFieldName("_salesTerritoryHistories").WithOpposite(x => x.SalesPerson).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesPersonQuotaHistories).HasFieldName("_salesPersonQuotaHistories").WithOpposite(x => x.SalesPerson).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritory).HasFieldName("_salesTerritory").WithOpposite(x => x.SalesPeople).ToColumn("TerritoryID").HasConstraint((x, y) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.SalesPerson).ToColumn("SalesPersonID").HasConstraint((y, x) => x.SalesPersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesOrderHeaderSalesReason> GetSalesOrderHeaderSalesReasonMappingConfiguration()
        {
            MappingConfiguration<SalesOrderHeaderSalesReason> configuration = this.GetSalesOrderHeaderSalesReasonClassConfiguration();
            this.PrepareSalesOrderHeaderSalesReasonPropertyConfigurations(configuration);
            this.PrepareSalesOrderHeaderSalesReasonAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesOrderHeaderSalesReason> GetSalesOrderHeaderSalesReasonClassConfiguration()
        {
            MappingConfiguration<SalesOrderHeaderSalesReason> configuration = new MappingConfiguration<SalesOrderHeaderSalesReason>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesOrderHeaderSalesReason");

            return configuration;
        }

        public void PrepareSalesOrderHeaderSalesReasonPropertyConfigurations(MappingConfiguration<SalesOrderHeaderSalesReason> configuration)
        {
            configuration.HasProperty(x => x.SalesOrderID).IsIdentity().HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesReasonID).IsIdentity().HasFieldName("_salesReasonID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesReasonID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesOrderHeaderSalesReasonAssociationConfigurations(MappingConfiguration<SalesOrderHeaderSalesReason> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeader).HasFieldName("_salesOrderHeader").WithOpposite(x => x.SalesOrderHeaderSalesReasons).ToColumn("SalesOrderID").HasConstraint((x, y) => x.SalesOrderID == y.SalesOrderID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesReason).HasFieldName("_salesReason").WithOpposite(x => x.SalesOrderHeaderSalesReasons).ToColumn("SalesReasonID").HasConstraint((x, y) => x.SalesReasonID == y.SalesReasonID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesOrderHeader> GetSalesOrderHeaderMappingConfiguration()
        {
            MappingConfiguration<SalesOrderHeader> configuration = this.GetSalesOrderHeaderClassConfiguration();
            this.PrepareSalesOrderHeaderPropertyConfigurations(configuration);
            this.PrepareSalesOrderHeaderAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesOrderHeader> GetSalesOrderHeaderClassConfiguration()
        {
            MappingConfiguration<SalesOrderHeader> configuration = new MappingConfiguration<SalesOrderHeader>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesOrderHeader");

            return configuration;
        }

        public void PrepareSalesOrderHeaderPropertyConfigurations(MappingConfiguration<SalesOrderHeader> configuration)
        {
            configuration.HasProperty(x => x.SalesOrderID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.RevisionNumber).HasFieldName("_revisionNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("RevisionNumber").IsNotNullable().HasColumnType("tinyint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.OrderDate).HasFieldName("_orderDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.DueDate).HasFieldName("_dueDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("DueDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.ShipDate).HasFieldName("_shipDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipDate").IsNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.Status).HasFieldName("_status").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Status").IsNotNullable().HasColumnType("tinyint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.OnlineOrderFlag).HasFieldName("_onlineOrderFlag").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OnlineOrderFlag").IsNotNullable().HasColumnType("'Flag'").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesOrderNumber).HasFieldName("_salesOrderNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderNumber").IsNotNullable().HasColumnType("nvarchar").HasLength(25);
            configuration.HasProperty(x => x.PurchaseOrderNumber).HasFieldName("_purchaseOrderNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PurchaseOrderNumber").IsNullable().HasColumnType("'OrderNumber'").HasLength(25);
            configuration.HasProperty(x => x.AccountNumber).HasFieldName("_accountNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AccountNumber").IsNullable().HasColumnType("'AccountNumber'").HasLength(15);
            configuration.HasProperty(x => x.CustomerID).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesPersonID).HasFieldName("_salesPersonID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesPersonID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TerritoryID).HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.BillToAddressID).HasFieldName("_billToAddressID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BillToAddressID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ShipToAddressID).HasFieldName("_shipToAddressID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipToAddressID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ShipMethodID).HasFieldName("_shipMethodID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ShipMethodID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CreditCardID).HasFieldName("_creditCardID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CreditCardID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CreditCardApprovalCode).HasFieldName("_creditCardApprovalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CreditCardApprovalCode").IsNullable().HasColumnType("varchar").HasLength(15);
            configuration.HasProperty(x => x.CurrencyRateID).HasFieldName("_currencyRateID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CurrencyRateID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SubTotal).HasFieldName("_subTotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SubTotal").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TaxAmt).HasFieldName("_taxAmt").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TaxAmt").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Freight).HasFieldName("_freight").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Freight").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TotalDue).HasFieldName("_totalDue").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TotalDue").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Comment).HasFieldName("_comment").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Comment").IsNullable().HasColumnType("nvarchar").HasLength(128);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesOrderHeaderAssociationConfigurations(MappingConfiguration<SalesOrderHeader> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaderSalesReasons).HasFieldName("_salesOrderHeaderSalesReasons").WithOpposite(x => x.SalesOrderHeader).ToColumn("SalesOrderID").HasConstraint((y, x) => x.SalesOrderID == y.SalesOrderID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Address).HasFieldName("_address").WithOpposite(x => x.SalesOrderHeaders).ToColumn("BillToAddressID").HasConstraint((x, y) => x.BillToAddressID == y.AddressID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Address1).HasFieldName("_address1").WithOpposite(x => x.SalesOrderHeaders1).ToColumn("ShipToAddressID").HasConstraint((x, y) => x.ShipToAddressID == y.AddressID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CreditCard).HasFieldName("_creditCard").WithOpposite(x => x.SalesOrderHeaders).ToColumn("CreditCardID").HasConstraint((x, y) => x.CreditCardID == y.CreditCardID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CurrencyRate).HasFieldName("_currencyRate").WithOpposite(x => x.SalesOrderHeaders).ToColumn("CurrencyRateID").HasConstraint((x, y) => x.CurrencyRateID == y.CurrencyRateID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Customer).HasFieldName("_customer").WithOpposite(x => x.SalesOrderHeaders).ToColumn("CustomerID").HasConstraint((x, y) => x.CustomerID == y.CustomerID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesPerson).HasFieldName("_salesPerson").WithOpposite(x => x.SalesOrderHeaders).ToColumn("SalesPersonID").HasConstraint((x, y) => x.SalesPersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritory).HasFieldName("_salesTerritory").WithOpposite(x => x.SalesOrderHeaders).ToColumn("TerritoryID").HasConstraint((x, y) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesOrderDetails).HasFieldName("_salesOrderDetails").WithOpposite(x => x.SalesOrderHeader).ToColumn("SalesOrderID").HasConstraint((y, x) => x.SalesOrderID == y.SalesOrderID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<SalesOrderDetail> GetSalesOrderDetailMappingConfiguration()
        {
            MappingConfiguration<SalesOrderDetail> configuration = this.GetSalesOrderDetailClassConfiguration();
            this.PrepareSalesOrderDetailPropertyConfigurations(configuration);
            this.PrepareSalesOrderDetailAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<SalesOrderDetail> GetSalesOrderDetailClassConfiguration()
        {
            MappingConfiguration<SalesOrderDetail> configuration = new MappingConfiguration<SalesOrderDetail>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.SalesOrderDetail");

            return configuration;
        }

        public void PrepareSalesOrderDetailPropertyConfigurations(MappingConfiguration<SalesOrderDetail> configuration)
        {
            configuration.HasProperty(x => x.SalesOrderID).IsIdentity().HasFieldName("_salesOrderID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SalesOrderDetailID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_salesOrderDetailID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SalesOrderDetailID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CarrierTrackingNumber).HasFieldName("_carrierTrackingNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CarrierTrackingNumber").IsNullable().HasColumnType("nvarchar").HasLength(25);
            configuration.HasProperty(x => x.OrderQty).HasFieldName("_orderQty").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("OrderQty").IsNotNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ProductID).HasFieldName("_productID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ProductID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.SpecialOfferID).HasFieldName("_specialOfferID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SpecialOfferID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.UnitPrice).HasFieldName("_unitPrice").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPrice").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.UnitPriceDiscount).HasFieldName("_unitPriceDiscount").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("UnitPriceDiscount").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.LineTotal).HasFieldName("_lineTotal").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("LineTotal").IsNotNullable().HasColumnType("numeric").HasPrecision(38).HasScale(6);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareSalesOrderDetailAssociationConfigurations(MappingConfiguration<SalesOrderDetail> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeader).HasFieldName("_salesOrderHeader").WithOpposite(x => x.SalesOrderDetails).ToColumn("SalesOrderID").HasConstraint((x, y) => x.SalesOrderID == y.SalesOrderID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SpecialOfferProduct).HasFieldName("_specialOfferProduct").WithOpposite(x => x.SalesOrderDetails).HasConstraint((x, y) => x.SpecialOfferID == y.SpecialOfferID && x.ProductID == y.ProductID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<PhoneNumberType> GetPhoneNumberTypeMappingConfiguration()
        {
            MappingConfiguration<PhoneNumberType> configuration = this.GetPhoneNumberTypeClassConfiguration();
            this.PreparePhoneNumberTypePropertyConfigurations(configuration);
            this.PreparePhoneNumberTypeAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<PhoneNumberType> GetPhoneNumberTypeClassConfiguration()
        {
            MappingConfiguration<PhoneNumberType> configuration = new MappingConfiguration<PhoneNumberType>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.PhoneNumberType");

            return configuration;
        }

        public void PreparePhoneNumberTypePropertyConfigurations(MappingConfiguration<PhoneNumberType> configuration)
        {
            configuration.HasProperty(x => x.PhoneNumberTypeID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_phoneNumberTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PhoneNumberTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PreparePhoneNumberTypeAssociationConfigurations(MappingConfiguration<PhoneNumberType> configuration)
        {
            configuration.HasAssociation(x => x.PersonPhones).HasFieldName("_personPhones").WithOpposite(x => x.PhoneNumberType).ToColumn("PhoneNumberTypeID").HasConstraint((y, x) => x.PhoneNumberTypeID == y.PhoneNumberTypeID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<PersonPhone> GetPersonPhoneMappingConfiguration()
        {
            MappingConfiguration<PersonPhone> configuration = this.GetPersonPhoneClassConfiguration();
            this.PreparePersonPhonePropertyConfigurations(configuration);
            this.PreparePersonPhoneAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<PersonPhone> GetPersonPhoneClassConfiguration()
        {
            MappingConfiguration<PersonPhone> configuration = new MappingConfiguration<PersonPhone>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.PersonPhone");

            return configuration;
        }

        public void PreparePersonPhonePropertyConfigurations(MappingConfiguration<PersonPhone> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PhoneNumber).IsIdentity().HasFieldName("_phoneNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PhoneNumber").IsNotNullable().HasColumnType("'Phone'").HasLength(25);
            configuration.HasProperty(x => x.PhoneNumberTypeID).IsIdentity().HasFieldName("_phoneNumberTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PhoneNumberTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PreparePersonPhoneAssociationConfigurations(MappingConfiguration<PersonPhone> configuration)
        {
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.PersonPhones).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.PhoneNumberType).HasFieldName("_phoneNumberType").WithOpposite(x => x.PersonPhones).ToColumn("PhoneNumberTypeID").HasConstraint((x, y) => x.PhoneNumberTypeID == y.PhoneNumberTypeID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<PersonCreditCard> GetPersonCreditCardMappingConfiguration()
        {
            MappingConfiguration<PersonCreditCard> configuration = this.GetPersonCreditCardClassConfiguration();
            this.PreparePersonCreditCardPropertyConfigurations(configuration);
            this.PreparePersonCreditCardAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<PersonCreditCard> GetPersonCreditCardClassConfiguration()
        {
            MappingConfiguration<PersonCreditCard> configuration = new MappingConfiguration<PersonCreditCard>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.PersonCreditCard");

            return configuration;
        }

        public void PreparePersonCreditCardPropertyConfigurations(MappingConfiguration<PersonCreditCard> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CreditCardID).IsIdentity().HasFieldName("_creditCardID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CreditCardID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PreparePersonCreditCardAssociationConfigurations(MappingConfiguration<PersonCreditCard> configuration)
        {
            configuration.HasAssociation(x => x.CreditCard).HasFieldName("_creditCard").WithOpposite(x => x.PersonCreditCards).ToColumn("CreditCardID").HasConstraint((x, y) => x.CreditCardID == y.CreditCardID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.PersonCreditCards).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<Person> GetPersonMappingConfiguration()
        {
            MappingConfiguration<Person> configuration = this.GetPersonClassConfiguration();
            this.PreparePersonPropertyConfigurations(configuration);
            this.PreparePersonAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Person> GetPersonClassConfiguration()
        {
            MappingConfiguration<Person> configuration = new MappingConfiguration<Person>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.Person");

            return configuration;
        }

        public void PreparePersonPropertyConfigurations(MappingConfiguration<Person> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PersonType).HasFieldName("_personType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PersonType").IsNotNullable().HasColumnType("nchar").HasLength(2);
            configuration.HasProperty(x => x.NameStyle).HasFieldName("_nameStyle").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("NameStyle").IsNotNullable().HasColumnType("'NameStyle'").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Title).HasFieldName("_title").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Title").IsNullable().HasColumnType("nvarchar").HasLength(8);
            configuration.HasProperty(x => x.FirstName).HasFieldName("_firstName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FirstName").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.MiddleName).HasFieldName("_middleName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("MiddleName").IsNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.LastName).HasFieldName("_lastName").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("LastName").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.Suffix).HasFieldName("_suffix").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Suffix").IsNullable().HasColumnType("nvarchar").HasLength(10);
            configuration.HasProperty(x => x.EmailPromotion).HasFieldName("_emailPromotion").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmailPromotion").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.AdditionalContactInfo).HasFieldName("_additionalContactInfo").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AdditionalContactInfo").IsNullable().HasColumnType("xml").HasLength(0);
            configuration.HasProperty(x => x.Demographics).HasFieldName("_demographics").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Demographics").IsNullable().HasColumnType("xml").HasLength(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PreparePersonAssociationConfigurations(MappingConfiguration<Person> configuration)
        {
            configuration.HasAssociation(x => x.PersonPhones).HasFieldName("_personPhones").WithOpposite(x => x.Person).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.PersonCreditCards).HasFieldName("_personCreditCards").WithOpposite(x => x.Person).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntity).HasFieldName("_businessEntity").WithOpposite(x => x.Person).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Password).HasFieldName("_password").WithOpposite(x => x.Person).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.EmailAddresses).HasFieldName("_emailAddresses").WithOpposite(x => x.Person).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Customers).HasFieldName("_customers").WithOpposite(x => x.Person).ToColumn("PersonID").HasConstraint((y, x) => x.PersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntityContacts).HasFieldName("_businessEntityContacts").WithOpposite(x => x.Person).ToColumn("PersonID").HasConstraint((y, x) => x.PersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<Password> GetPasswordMappingConfiguration()
        {
            MappingConfiguration<Password> configuration = this.GetPasswordClassConfiguration();
            this.PreparePasswordPropertyConfigurations(configuration);
            this.PreparePasswordAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Password> GetPasswordClassConfiguration()
        {
            MappingConfiguration<Password> configuration = new MappingConfiguration<Password>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.Password");

            return configuration;
        }

        public void PreparePasswordPropertyConfigurations(MappingConfiguration<Password> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PasswordHash).HasFieldName("_passwordHash").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PasswordHash").IsNotNullable().HasColumnType("varchar").HasLength(128);
            configuration.HasProperty(x => x.PasswordSalt).HasFieldName("_passwordSalt").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PasswordSalt").IsNotNullable().HasColumnType("varchar").HasLength(10);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PreparePasswordAssociationConfigurations(MappingConfiguration<Password> configuration)
        {
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.Password).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<EmailAddress> GetEmailAddressMappingConfiguration()
        {
            MappingConfiguration<EmailAddress> configuration = this.GetEmailAddressClassConfiguration();
            this.PrepareEmailAddressPropertyConfigurations(configuration);
            this.PrepareEmailAddressAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<EmailAddress> GetEmailAddressClassConfiguration()
        {
            MappingConfiguration<EmailAddress> configuration = new MappingConfiguration<EmailAddress>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.EmailAddress");

            return configuration;
        }

        public void PrepareEmailAddressPropertyConfigurations(MappingConfiguration<EmailAddress> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.EmailAddressID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_emailAddressID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmailAddressID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.EmailAddress1).HasFieldName("_emailAddress1").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EmailAddress").IsNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareEmailAddressAssociationConfigurations(MappingConfiguration<EmailAddress> configuration)
        {
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.EmailAddresses).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<Customer> GetCustomerMappingConfiguration()
        {
            MappingConfiguration<Customer> configuration = this.GetCustomerClassConfiguration();
            this.PrepareCustomerPropertyConfigurations(configuration);
            this.PrepareCustomerAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Customer> GetCustomerClassConfiguration()
        {
            MappingConfiguration<Customer> configuration = new MappingConfiguration<Customer>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.Customer");

            return configuration;
        }

        public void PrepareCustomerPropertyConfigurations(MappingConfiguration<Customer> configuration)
        {
            configuration.HasProperty(x => x.CustomerID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_customerID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CustomerID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PersonID).HasFieldName("_personID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PersonID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.StoreID).HasFieldName("_storeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StoreID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.TerritoryID).HasFieldName("_territoryID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("TerritoryID").IsNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.AccountNumber).HasFieldName("_accountNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AccountNumber").IsNotNullable().HasColumnType("varchar").HasLength(10);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCustomerAssociationConfigurations(MappingConfiguration<Customer> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.Customer).ToColumn("CustomerID").HasConstraint((y, x) => x.CustomerID == y.CustomerID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.Customers).ToColumn("PersonID").HasConstraint((x, y) => x.PersonID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritory).HasFieldName("_salesTerritory").WithOpposite(x => x.Customers).ToColumn("TerritoryID").HasConstraint((x, y) => x.TerritoryID == y.TerritoryID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Store).HasFieldName("_store").WithOpposite(x => x.Customers).ToColumn("StoreID").HasConstraint((x, y) => x.StoreID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<CurrencyRate> GetCurrencyRateMappingConfiguration()
        {
            MappingConfiguration<CurrencyRate> configuration = this.GetCurrencyRateClassConfiguration();
            this.PrepareCurrencyRatePropertyConfigurations(configuration);
            this.PrepareCurrencyRateAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<CurrencyRate> GetCurrencyRateClassConfiguration()
        {
            MappingConfiguration<CurrencyRate> configuration = new MappingConfiguration<CurrencyRate>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.CurrencyRate");

            return configuration;
        }

        public void PrepareCurrencyRatePropertyConfigurations(MappingConfiguration<CurrencyRate> configuration)
        {
            configuration.HasProperty(x => x.CurrencyRateID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_currencyRateID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CurrencyRateID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CurrencyRateDate).HasFieldName("_currencyRateDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CurrencyRateDate").IsNotNullable().HasColumnType("datetime");
            configuration.HasProperty(x => x.FromCurrencyCode).HasFieldName("_fromCurrencyCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("FromCurrencyCode").IsNotNullable().HasColumnType("nchar").HasLength(3);
            configuration.HasProperty(x => x.ToCurrencyCode).HasFieldName("_toCurrencyCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ToCurrencyCode").IsNotNullable().HasColumnType("nchar").HasLength(3);
            configuration.HasProperty(x => x.AverageRate).HasFieldName("_averageRate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AverageRate").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.EndOfDayRate).HasFieldName("_endOfDayRate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("EndOfDayRate").IsNotNullable().HasColumnType("money").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCurrencyRateAssociationConfigurations(MappingConfiguration<CurrencyRate> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.CurrencyRate).ToColumn("CurrencyRateID").HasConstraint((y, x) => x.CurrencyRateID == y.CurrencyRateID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").WithOpposite(x => x.CurrencyRates).ToColumn("FromCurrencyCode").HasConstraint((x, y) => x.FromCurrencyCode == y.CurrencyCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Currency1).HasFieldName("_currency1").WithOpposite(x => x.CurrencyRates1).ToColumn("ToCurrencyCode").HasConstraint((x, y) => x.ToCurrencyCode == y.CurrencyCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<Currency> GetCurrencyMappingConfiguration()
        {
            MappingConfiguration<Currency> configuration = this.GetCurrencyClassConfiguration();
            this.PrepareCurrencyPropertyConfigurations(configuration);
            this.PrepareCurrencyAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Currency> GetCurrencyClassConfiguration()
        {
            MappingConfiguration<Currency> configuration = new MappingConfiguration<Currency>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.Currency");

            return configuration;
        }

        public void PrepareCurrencyPropertyConfigurations(MappingConfiguration<Currency> configuration)
        {
            configuration.HasProperty(x => x.CurrencyCode).IsIdentity().HasFieldName("_currencyCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CurrencyCode").IsNotNullable().HasColumnType("nchar").HasLength(3);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCurrencyAssociationConfigurations(MappingConfiguration<Currency> configuration)
        {
            configuration.HasAssociation(x => x.CurrencyRates).HasFieldName("_currencyRates").WithOpposite(x => x.Currency).ToColumn("FromCurrencyCode").HasConstraint((y, x) => x.FromCurrencyCode == y.CurrencyCode).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CurrencyRates1).HasFieldName("_currencyRates1").WithOpposite(x => x.Currency1).ToColumn("ToCurrencyCode").HasConstraint((y, x) => x.ToCurrencyCode == y.CurrencyCode).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CountryRegionCurrencies).HasFieldName("_countryRegionCurrencies").WithOpposite(x => x.Currency).ToColumn("CurrencyCode").HasConstraint((y, x) => x.CurrencyCode == y.CurrencyCode).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<CreditCard> GetCreditCardMappingConfiguration()
        {
            MappingConfiguration<CreditCard> configuration = this.GetCreditCardClassConfiguration();
            this.PrepareCreditCardPropertyConfigurations(configuration);
            this.PrepareCreditCardAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<CreditCard> GetCreditCardClassConfiguration()
        {
            MappingConfiguration<CreditCard> configuration = new MappingConfiguration<CreditCard>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.CreditCard");

            return configuration;
        }

        public void PrepareCreditCardPropertyConfigurations(MappingConfiguration<CreditCard> configuration)
        {
            configuration.HasProperty(x => x.CreditCardID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_creditCardID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CreditCardID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.CardType).HasFieldName("_cardType").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CardType").IsNotNullable().HasColumnType("nvarchar").HasLength(50);
            configuration.HasProperty(x => x.CardNumber).HasFieldName("_cardNumber").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CardNumber").IsNotNullable().HasColumnType("nvarchar").HasLength(25);
            configuration.HasProperty(x => x.ExpMonth).HasFieldName("_expMonth").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ExpMonth").IsNotNullable().HasColumnType("tinyint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ExpYear).HasFieldName("_expYear").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ExpYear").IsNotNullable().HasColumnType("smallint").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCreditCardAssociationConfigurations(MappingConfiguration<CreditCard> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.CreditCard).ToColumn("CreditCardID").HasConstraint((y, x) => x.CreditCardID == y.CreditCardID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.PersonCreditCards).HasFieldName("_personCreditCards").WithOpposite(x => x.CreditCard).ToColumn("CreditCardID").HasConstraint((y, x) => x.CreditCardID == y.CreditCardID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<CountryRegionCurrency> GetCountryRegionCurrencyMappingConfiguration()
        {
            MappingConfiguration<CountryRegionCurrency> configuration = this.GetCountryRegionCurrencyClassConfiguration();
            this.PrepareCountryRegionCurrencyPropertyConfigurations(configuration);
            this.PrepareCountryRegionCurrencyAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<CountryRegionCurrency> GetCountryRegionCurrencyClassConfiguration()
        {
            MappingConfiguration<CountryRegionCurrency> configuration = new MappingConfiguration<CountryRegionCurrency>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Sales.CountryRegionCurrency");

            return configuration;
        }

        public void PrepareCountryRegionCurrencyPropertyConfigurations(MappingConfiguration<CountryRegionCurrency> configuration)
        {
            configuration.HasProperty(x => x.CountryRegionCode).IsIdentity().HasFieldName("_countryRegionCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CountryRegionCode").IsNotNullable().HasColumnType("nvarchar").HasLength(3);
            configuration.HasProperty(x => x.CurrencyCode).IsIdentity().HasFieldName("_currencyCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CurrencyCode").IsNotNullable().HasColumnType("nchar").HasLength(3);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCountryRegionCurrencyAssociationConfigurations(MappingConfiguration<CountryRegionCurrency> configuration)
        {
            configuration.HasAssociation(x => x.CountryRegion).HasFieldName("_countryRegion").WithOpposite(x => x.CountryRegionCurrencies).ToColumn("CountryRegionCode").HasConstraint((x, y) => x.CountryRegionCode == y.CountryRegionCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Currency).HasFieldName("_currency").WithOpposite(x => x.CountryRegionCurrencies).ToColumn("CurrencyCode").HasConstraint((x, y) => x.CurrencyCode == y.CurrencyCode).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<CountryRegion> GetCountryRegionMappingConfiguration()
        {
            MappingConfiguration<CountryRegion> configuration = this.GetCountryRegionClassConfiguration();
            this.PrepareCountryRegionPropertyConfigurations(configuration);
            this.PrepareCountryRegionAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<CountryRegion> GetCountryRegionClassConfiguration()
        {
            MappingConfiguration<CountryRegion> configuration = new MappingConfiguration<CountryRegion>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.CountryRegion");

            return configuration;
        }

        public void PrepareCountryRegionPropertyConfigurations(MappingConfiguration<CountryRegion> configuration)
        {
            configuration.HasProperty(x => x.CountryRegionCode).IsIdentity().HasFieldName("_countryRegionCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("CountryRegionCode").IsNotNullable().HasColumnType("nvarchar").HasLength(3);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareCountryRegionAssociationConfigurations(MappingConfiguration<CountryRegion> configuration)
        {
            configuration.HasAssociation(x => x.StateProvinces).HasFieldName("_stateProvinces").WithOpposite(x => x.CountryRegion).ToColumn("CountryRegionCode").HasConstraint((y, x) => x.CountryRegionCode == y.CountryRegionCode).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesTerritories).HasFieldName("_salesTerritories").WithOpposite(x => x.CountryRegion).ToColumn("CountryRegionCode").HasConstraint((y, x) => x.CountryRegionCode == y.CountryRegionCode).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.CountryRegionCurrencies).HasFieldName("_countryRegionCurrencies").WithOpposite(x => x.CountryRegion).ToColumn("CountryRegionCode").HasConstraint((y, x) => x.CountryRegionCode == y.CountryRegionCode).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<ContactType> GetContactTypeMappingConfiguration()
        {
            MappingConfiguration<ContactType> configuration = this.GetContactTypeClassConfiguration();
            this.PrepareContactTypePropertyConfigurations(configuration);
            this.PrepareContactTypeAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<ContactType> GetContactTypeClassConfiguration()
        {
            MappingConfiguration<ContactType> configuration = new MappingConfiguration<ContactType>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.ContactType");

            return configuration;
        }

        public void PrepareContactTypePropertyConfigurations(MappingConfiguration<ContactType> configuration)
        {
            configuration.HasProperty(x => x.ContactTypeID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_contactTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareContactTypeAssociationConfigurations(MappingConfiguration<ContactType> configuration)
        {
            configuration.HasAssociation(x => x.BusinessEntityContacts).HasFieldName("_businessEntityContacts").WithOpposite(x => x.ContactType).ToColumn("ContactTypeID").HasConstraint((y, x) => x.ContactTypeID == y.ContactTypeID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<BusinessEntityContact> GetBusinessEntityContactMappingConfiguration()
        {
            MappingConfiguration<BusinessEntityContact> configuration = this.GetBusinessEntityContactClassConfiguration();
            this.PrepareBusinessEntityContactPropertyConfigurations(configuration);
            this.PrepareBusinessEntityContactAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<BusinessEntityContact> GetBusinessEntityContactClassConfiguration()
        {
            MappingConfiguration<BusinessEntityContact> configuration = new MappingConfiguration<BusinessEntityContact>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.BusinessEntityContact");

            return configuration;
        }

        public void PrepareBusinessEntityContactPropertyConfigurations(MappingConfiguration<BusinessEntityContact> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PersonID).IsIdentity().HasFieldName("_personID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PersonID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ContactTypeID).IsIdentity().HasFieldName("_contactTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ContactTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareBusinessEntityContactAssociationConfigurations(MappingConfiguration<BusinessEntityContact> configuration)
        {
            configuration.HasAssociation(x => x.BusinessEntity).HasFieldName("_businessEntity").WithOpposite(x => x.BusinessEntityContacts).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.ContactType).HasFieldName("_contactType").WithOpposite(x => x.BusinessEntityContacts).ToColumn("ContactTypeID").HasConstraint((x, y) => x.ContactTypeID == y.ContactTypeID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.BusinessEntityContacts).ToColumn("PersonID").HasConstraint((x, y) => x.PersonID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<BusinessEntityAddress> GetBusinessEntityAddressMappingConfiguration()
        {
            MappingConfiguration<BusinessEntityAddress> configuration = this.GetBusinessEntityAddressClassConfiguration();
            this.PrepareBusinessEntityAddressPropertyConfigurations(configuration);
            this.PrepareBusinessEntityAddressAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<BusinessEntityAddress> GetBusinessEntityAddressClassConfiguration()
        {
            MappingConfiguration<BusinessEntityAddress> configuration = new MappingConfiguration<BusinessEntityAddress>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.BusinessEntityAddress");

            return configuration;
        }

        public void PrepareBusinessEntityAddressPropertyConfigurations(MappingConfiguration<BusinessEntityAddress> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity().HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.AddressID).IsIdentity().HasFieldName("_addressID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.AddressTypeID).IsIdentity().HasFieldName("_addressTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareBusinessEntityAddressAssociationConfigurations(MappingConfiguration<BusinessEntityAddress> configuration)
        {
            configuration.HasAssociation(x => x.Address).HasFieldName("_address").WithOpposite(x => x.BusinessEntityAddresses).ToColumn("AddressID").HasConstraint((x, y) => x.AddressID == y.AddressID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.AddressType).HasFieldName("_addressType").WithOpposite(x => x.BusinessEntityAddresses).ToColumn("AddressTypeID").HasConstraint((x, y) => x.AddressTypeID == y.AddressTypeID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntity).HasFieldName("_businessEntity").WithOpposite(x => x.BusinessEntityAddresses).ToColumn("BusinessEntityID").HasConstraint((x, y) => x.BusinessEntityID == y.BusinessEntityID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<BusinessEntity> GetBusinessEntityMappingConfiguration()
        {
            MappingConfiguration<BusinessEntity> configuration = this.GetBusinessEntityClassConfiguration();
            this.PrepareBusinessEntityPropertyConfigurations(configuration);
            this.PrepareBusinessEntityAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<BusinessEntity> GetBusinessEntityClassConfiguration()
        {
            MappingConfiguration<BusinessEntity> configuration = new MappingConfiguration<BusinessEntity>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.BusinessEntity");

            return configuration;
        }

        public void PrepareBusinessEntityPropertyConfigurations(MappingConfiguration<BusinessEntity> configuration)
        {
            configuration.HasProperty(x => x.BusinessEntityID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_businessEntityID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("BusinessEntityID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareBusinessEntityAssociationConfigurations(MappingConfiguration<BusinessEntity> configuration)
        {
            configuration.HasAssociation(x => x.Store).HasFieldName("_store").WithOpposite(x => x.BusinessEntity).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.Person).HasFieldName("_person").WithOpposite(x => x.BusinessEntity).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).IsManaged().WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntityContacts).HasFieldName("_businessEntityContacts").WithOpposite(x => x.BusinessEntity).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntityAddresses).HasFieldName("_businessEntityAddresses").WithOpposite(x => x.BusinessEntity).ToColumn("BusinessEntityID").HasConstraint((y, x) => x.BusinessEntityID == y.BusinessEntityID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<AddressType> GetAddressTypeMappingConfiguration()
        {
            MappingConfiguration<AddressType> configuration = this.GetAddressTypeClassConfiguration();
            this.PrepareAddressTypePropertyConfigurations(configuration);
            this.PrepareAddressTypeAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<AddressType> GetAddressTypeClassConfiguration()
        {
            MappingConfiguration<AddressType> configuration = new MappingConfiguration<AddressType>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.AddressType");

            return configuration;
        }

        public void PrepareAddressTypePropertyConfigurations(MappingConfiguration<AddressType> configuration)
        {
            configuration.HasProperty(x => x.AddressTypeID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_addressTypeID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressTypeID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.Name).HasFieldName("_name").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("Name").IsNotNullable().HasColumnType("'Name'").HasLength(50);
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareAddressTypeAssociationConfigurations(MappingConfiguration<AddressType> configuration)
        {
            configuration.HasAssociation(x => x.BusinessEntityAddresses).HasFieldName("_businessEntityAddresses").WithOpposite(x => x.AddressType).ToColumn("AddressTypeID").HasConstraint((y, x) => x.AddressTypeID == y.AddressTypeID).WithDataAccessKind(DataAccessKind.ReadWrite);
        }

        public MappingConfiguration<Address> GetAddressMappingConfiguration()
        {
            MappingConfiguration<Address> configuration = this.GetAddressClassConfiguration();
            this.PrepareAddressPropertyConfigurations(configuration);
            this.PrepareAddressAssociationConfigurations(configuration);

            return configuration;
        }

        public MappingConfiguration<Address> GetAddressClassConfiguration()
        {
            MappingConfiguration<Address> configuration = new MappingConfiguration<Address>();
            configuration.MapType(x => new { }).WithConcurencyControl(OptimisticConcurrencyControlStrategy.Changed).ToTable("Person.Address");

            return configuration;
        }

        public void PrepareAddressPropertyConfigurations(MappingConfiguration<Address> configuration)
        {
            configuration.HasProperty(x => x.AddressID).IsIdentity(KeyGenerator.Autoinc).HasFieldName("_addressID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.AddressLine1).HasFieldName("_addressLine1").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressLine1").IsNotNullable().HasColumnType("nvarchar").HasLength(60);
            configuration.HasProperty(x => x.AddressLine2).HasFieldName("_addressLine2").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("AddressLine2").IsNullable().HasColumnType("nvarchar").HasLength(60);
            configuration.HasProperty(x => x.City).HasFieldName("_city").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("City").IsNotNullable().HasColumnType("nvarchar").HasLength(30);
            configuration.HasProperty(x => x.StateProvinceID).HasFieldName("_stateProvinceID").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("StateProvinceID").IsNotNullable().HasColumnType("int").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.PostalCode).HasFieldName("_postalCode").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("PostalCode").IsNotNullable().HasColumnType("nvarchar").HasLength(15);
            configuration.HasProperty(x => x.SpatialLocation).HasFieldName("_spatialLocation").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("SpatialLocation").IsNullable().HasColumnType("geography");
            configuration.HasProperty(x => x.Rowguid).HasFieldName("_rowguid").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("rowguid").IsNotNullable().HasColumnType("uniqueidentifier").HasPrecision(0).HasScale(0);
            configuration.HasProperty(x => x.ModifiedDate).HasFieldName("_modifiedDate").WithDataAccessKind(DataAccessKind.ReadWrite).ToColumn("ModifiedDate").IsNotNullable().HasColumnType("datetime");
        }

        public void PrepareAddressAssociationConfigurations(MappingConfiguration<Address> configuration)
        {
            configuration.HasAssociation(x => x.SalesOrderHeaders).HasFieldName("_salesOrderHeaders").WithOpposite(x => x.Address).ToColumn("BillToAddressID").HasConstraint((y, x) => x.BillToAddressID == y.AddressID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.SalesOrderHeaders1).HasFieldName("_salesOrderHeaders1").WithOpposite(x => x.Address1).ToColumn("ShipToAddressID").HasConstraint((y, x) => x.ShipToAddressID == y.AddressID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.BusinessEntityAddresses).HasFieldName("_businessEntityAddresses").WithOpposite(x => x.Address).ToColumn("AddressID").HasConstraint((y, x) => x.AddressID == y.AddressID).WithDataAccessKind(DataAccessKind.ReadWrite);
            configuration.HasAssociation(x => x.StateProvince).HasFieldName("_stateProvince").WithOpposite(x => x.Addresses).ToColumn("StateProvinceID").HasConstraint((x, y) => x.StateProvinceID == y.StateProvinceID).IsRequired().WithDataAccessKind(DataAccessKind.ReadWrite);
        }

    }
}
#pragma warning restore 1591

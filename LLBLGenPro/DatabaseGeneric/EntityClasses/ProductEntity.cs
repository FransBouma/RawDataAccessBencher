//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AdventureWorks.Dal.Adapter.HelperClasses;
using AdventureWorks.Dal.Adapter.FactoryClasses;
using AdventureWorks.Dal.Adapter.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AdventureWorks.Dal.Adapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'Product'.<br/><br/></summary>
	[Serializable]
	public partial class ProductEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<BillOfMaterialEntity> _billOfMaterials;
		private EntityCollection<BillOfMaterialEntity> _billOfMaterials_;
		private EntityCollection<ProductCostHistoryEntity> _productCostHistories;
		private EntityCollection<ProductDocumentEntity> _productDocuments;
		private EntityCollection<ProductInventoryEntity> _productInventories;
		private EntityCollection<ProductListPriceHistoryEntity> _productListPriceHistories;
		private EntityCollection<ProductProductPhotoEntity> _productProductPhotos;
		private EntityCollection<ProductReviewEntity> _productReviews;
		private EntityCollection<ProductVendorEntity> _productVendors;
		private EntityCollection<PurchaseOrderDetailEntity> _purchaseOrderDetails;
		private EntityCollection<ShoppingCartItemEntity> _shoppingCartItems;
		private EntityCollection<SpecialOfferProductEntity> _specialOfferProducts;
		private EntityCollection<TransactionHistoryEntity> _transactionHistories;
		private EntityCollection<WorkOrderEntity> _workOrders;
		private ProductModelEntity _productModel;
		private ProductSubcategoryEntity _productSubcategory;
		private UnitMeasureEntity _unitMeasure;
		private UnitMeasureEntity _unitMeasure_;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static ProductEntityStaticMetaData _staticMetaData = new ProductEntityStaticMetaData();
		private static ProductRelations _relationsFactory = new ProductRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ProductModel</summary>
			public static readonly string ProductModel = "ProductModel";
			/// <summary>Member name ProductSubcategory</summary>
			public static readonly string ProductSubcategory = "ProductSubcategory";
			/// <summary>Member name UnitMeasure</summary>
			public static readonly string UnitMeasure = "UnitMeasure";
			/// <summary>Member name UnitMeasure_</summary>
			public static readonly string UnitMeasure_ = "UnitMeasure_";
			/// <summary>Member name BillOfMaterials</summary>
			public static readonly string BillOfMaterials = "BillOfMaterials";
			/// <summary>Member name BillOfMaterials_</summary>
			public static readonly string BillOfMaterials_ = "BillOfMaterials_";
			/// <summary>Member name ProductCostHistories</summary>
			public static readonly string ProductCostHistories = "ProductCostHistories";
			/// <summary>Member name ProductDocuments</summary>
			public static readonly string ProductDocuments = "ProductDocuments";
			/// <summary>Member name ProductInventories</summary>
			public static readonly string ProductInventories = "ProductInventories";
			/// <summary>Member name ProductListPriceHistories</summary>
			public static readonly string ProductListPriceHistories = "ProductListPriceHistories";
			/// <summary>Member name ProductProductPhotos</summary>
			public static readonly string ProductProductPhotos = "ProductProductPhotos";
			/// <summary>Member name ProductReviews</summary>
			public static readonly string ProductReviews = "ProductReviews";
			/// <summary>Member name ProductVendors</summary>
			public static readonly string ProductVendors = "ProductVendors";
			/// <summary>Member name PurchaseOrderDetails</summary>
			public static readonly string PurchaseOrderDetails = "PurchaseOrderDetails";
			/// <summary>Member name ShoppingCartItems</summary>
			public static readonly string ShoppingCartItems = "ShoppingCartItems";
			/// <summary>Member name SpecialOfferProducts</summary>
			public static readonly string SpecialOfferProducts = "SpecialOfferProducts";
			/// <summary>Member name TransactionHistories</summary>
			public static readonly string TransactionHistories = "TransactionHistories";
			/// <summary>Member name WorkOrders</summary>
			public static readonly string WorkOrders = "WorkOrders";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ProductEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ProductEntityStaticMetaData()
			{
				SetEntityCoreInfo("ProductEntity", InheritanceHierarchyType.None, false, (int)AdventureWorks.Dal.Adapter.EntityType.ProductEntity, typeof(ProductEntity), typeof(ProductEntityFactory), false);
				AddNavigatorMetaData<ProductEntity, EntityCollection<BillOfMaterialEntity>>("BillOfMaterials", a => a._billOfMaterials, (a, b) => a._billOfMaterials = b, a => a.BillOfMaterials, () => new ProductRelations().BillOfMaterialEntityUsingComponentId, typeof(BillOfMaterialEntity), (int)AdventureWorks.Dal.Adapter.EntityType.BillOfMaterialEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<BillOfMaterialEntity>>("BillOfMaterials_", a => a._billOfMaterials_, (a, b) => a._billOfMaterials_ = b, a => a.BillOfMaterials_, () => new ProductRelations().BillOfMaterialEntityUsingProductAssemblyId, typeof(BillOfMaterialEntity), (int)AdventureWorks.Dal.Adapter.EntityType.BillOfMaterialEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductCostHistoryEntity>>("ProductCostHistories", a => a._productCostHistories, (a, b) => a._productCostHistories = b, a => a.ProductCostHistories, () => new ProductRelations().ProductCostHistoryEntityUsingProductId, typeof(ProductCostHistoryEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductCostHistoryEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductDocumentEntity>>("ProductDocuments", a => a._productDocuments, (a, b) => a._productDocuments = b, a => a.ProductDocuments, () => new ProductRelations().ProductDocumentEntityUsingProductId, typeof(ProductDocumentEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductDocumentEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductInventoryEntity>>("ProductInventories", a => a._productInventories, (a, b) => a._productInventories = b, a => a.ProductInventories, () => new ProductRelations().ProductInventoryEntityUsingProductId, typeof(ProductInventoryEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductInventoryEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductListPriceHistoryEntity>>("ProductListPriceHistories", a => a._productListPriceHistories, (a, b) => a._productListPriceHistories = b, a => a.ProductListPriceHistories, () => new ProductRelations().ProductListPriceHistoryEntityUsingProductId, typeof(ProductListPriceHistoryEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductListPriceHistoryEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductProductPhotoEntity>>("ProductProductPhotos", a => a._productProductPhotos, (a, b) => a._productProductPhotos = b, a => a.ProductProductPhotos, () => new ProductRelations().ProductProductPhotoEntityUsingProductId, typeof(ProductProductPhotoEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductProductPhotoEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductReviewEntity>>("ProductReviews", a => a._productReviews, (a, b) => a._productReviews = b, a => a.ProductReviews, () => new ProductRelations().ProductReviewEntityUsingProductId, typeof(ProductReviewEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductReviewEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ProductVendorEntity>>("ProductVendors", a => a._productVendors, (a, b) => a._productVendors = b, a => a.ProductVendors, () => new ProductRelations().ProductVendorEntityUsingProductId, typeof(ProductVendorEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductVendorEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<PurchaseOrderDetailEntity>>("PurchaseOrderDetails", a => a._purchaseOrderDetails, (a, b) => a._purchaseOrderDetails = b, a => a.PurchaseOrderDetails, () => new ProductRelations().PurchaseOrderDetailEntityUsingProductId, typeof(PurchaseOrderDetailEntity), (int)AdventureWorks.Dal.Adapter.EntityType.PurchaseOrderDetailEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<ShoppingCartItemEntity>>("ShoppingCartItems", a => a._shoppingCartItems, (a, b) => a._shoppingCartItems = b, a => a.ShoppingCartItems, () => new ProductRelations().ShoppingCartItemEntityUsingProductId, typeof(ShoppingCartItemEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ShoppingCartItemEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<SpecialOfferProductEntity>>("SpecialOfferProducts", a => a._specialOfferProducts, (a, b) => a._specialOfferProducts = b, a => a.SpecialOfferProducts, () => new ProductRelations().SpecialOfferProductEntityUsingProductId, typeof(SpecialOfferProductEntity), (int)AdventureWorks.Dal.Adapter.EntityType.SpecialOfferProductEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<TransactionHistoryEntity>>("TransactionHistories", a => a._transactionHistories, (a, b) => a._transactionHistories = b, a => a.TransactionHistories, () => new ProductRelations().TransactionHistoryEntityUsingProductId, typeof(TransactionHistoryEntity), (int)AdventureWorks.Dal.Adapter.EntityType.TransactionHistoryEntity);
				AddNavigatorMetaData<ProductEntity, EntityCollection<WorkOrderEntity>>("WorkOrders", a => a._workOrders, (a, b) => a._workOrders = b, a => a.WorkOrders, () => new ProductRelations().WorkOrderEntityUsingProductId, typeof(WorkOrderEntity), (int)AdventureWorks.Dal.Adapter.EntityType.WorkOrderEntity);
				AddNavigatorMetaData<ProductEntity, ProductModelEntity>("ProductModel", "Products", (a, b) => a._productModel = b, a => a._productModel, (a, b) => a.ProductModel = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticProductRelations.ProductModelEntityUsingProductModelIdStatic, ()=>new ProductRelations().ProductModelEntityUsingProductModelId, null, new int[] { (int)ProductFieldIndex.ProductModelId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.ProductModelEntity);
				AddNavigatorMetaData<ProductEntity, ProductSubcategoryEntity>("ProductSubcategory", "Products", (a, b) => a._productSubcategory = b, a => a._productSubcategory, (a, b) => a.ProductSubcategory = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticProductRelations.ProductSubcategoryEntityUsingProductSubcategoryIdStatic, ()=>new ProductRelations().ProductSubcategoryEntityUsingProductSubcategoryId, null, new int[] { (int)ProductFieldIndex.ProductSubcategoryId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.ProductSubcategoryEntity);
				AddNavigatorMetaData<ProductEntity, UnitMeasureEntity>("UnitMeasure", "Products", (a, b) => a._unitMeasure = b, a => a._unitMeasure, (a, b) => a.UnitMeasure = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticProductRelations.UnitMeasureEntityUsingSizeUnitMeasureCodeStatic, ()=>new ProductRelations().UnitMeasureEntityUsingSizeUnitMeasureCode, null, new int[] { (int)ProductFieldIndex.SizeUnitMeasureCode }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.UnitMeasureEntity);
				AddNavigatorMetaData<ProductEntity, UnitMeasureEntity>("UnitMeasure_", "Products_", (a, b) => a._unitMeasure_ = b, a => a._unitMeasure_, (a, b) => a.UnitMeasure_ = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticProductRelations.UnitMeasureEntityUsingWeightUnitMeasureCodeStatic, ()=>new ProductRelations().UnitMeasureEntityUsingWeightUnitMeasureCode, null, new int[] { (int)ProductFieldIndex.WeightUnitMeasureCode }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.UnitMeasureEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ProductEntity()
		{
		}

		/// <summary> CTor</summary>
		public ProductEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ProductEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ProductEntity</param>
		public ProductEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="productId">PK value for Product which data should be fetched into this Product object</param>
		public ProductEntity(System.Int32 productId) : this(productId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="productId">PK value for Product which data should be fetched into this Product object</param>
		/// <param name="validator">The custom validator object for this ProductEntity</param>
		public ProductEntity(System.Int32 productId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ProductId = productId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ProductEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'BillOfMaterial' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBillOfMaterials() { return CreateRelationInfoForNavigator("BillOfMaterials"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'BillOfMaterial' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBillOfMaterials_() { return CreateRelationInfoForNavigator("BillOfMaterials_"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductCostHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductCostHistories() { return CreateRelationInfoForNavigator("ProductCostHistories"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductDocument' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductDocuments() { return CreateRelationInfoForNavigator("ProductDocuments"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductInventory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductInventories() { return CreateRelationInfoForNavigator("ProductInventories"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductListPriceHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductListPriceHistories() { return CreateRelationInfoForNavigator("ProductListPriceHistories"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductProductPhoto' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductProductPhotos() { return CreateRelationInfoForNavigator("ProductProductPhotos"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductReview' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductReviews() { return CreateRelationInfoForNavigator("ProductReviews"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductVendor' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductVendors() { return CreateRelationInfoForNavigator("ProductVendors"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'PurchaseOrderDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderDetails() { return CreateRelationInfoForNavigator("PurchaseOrderDetails"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ShoppingCartItem' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShoppingCartItems() { return CreateRelationInfoForNavigator("ShoppingCartItems"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'SpecialOfferProduct' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSpecialOfferProducts() { return CreateRelationInfoForNavigator("SpecialOfferProducts"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'TransactionHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTransactionHistories() { return CreateRelationInfoForNavigator("TransactionHistories"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'WorkOrder' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoWorkOrders() { return CreateRelationInfoForNavigator("WorkOrders"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProductModel' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductModel() { return CreateRelationInfoForNavigator("ProductModel"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProductSubcategory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductSubcategory() { return CreateRelationInfoForNavigator("ProductSubcategory"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'UnitMeasure' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUnitMeasure() { return CreateRelationInfoForNavigator("UnitMeasure"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'UnitMeasure' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUnitMeasure_() { return CreateRelationInfoForNavigator("UnitMeasure_"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ProductEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ProductRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BillOfMaterial' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBillOfMaterials { get { return _staticMetaData.GetPrefetchPathElement("BillOfMaterials", CommonEntityBase.CreateEntityCollection<BillOfMaterialEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'BillOfMaterial' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBillOfMaterials_ { get { return _staticMetaData.GetPrefetchPathElement("BillOfMaterials_", CommonEntityBase.CreateEntityCollection<BillOfMaterialEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductCostHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductCostHistories { get { return _staticMetaData.GetPrefetchPathElement("ProductCostHistories", CommonEntityBase.CreateEntityCollection<ProductCostHistoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductDocument' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductDocuments { get { return _staticMetaData.GetPrefetchPathElement("ProductDocuments", CommonEntityBase.CreateEntityCollection<ProductDocumentEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductInventory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductInventories { get { return _staticMetaData.GetPrefetchPathElement("ProductInventories", CommonEntityBase.CreateEntityCollection<ProductInventoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductListPriceHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductListPriceHistories { get { return _staticMetaData.GetPrefetchPathElement("ProductListPriceHistories", CommonEntityBase.CreateEntityCollection<ProductListPriceHistoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductProductPhoto' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductProductPhotos { get { return _staticMetaData.GetPrefetchPathElement("ProductProductPhotos", CommonEntityBase.CreateEntityCollection<ProductProductPhotoEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductReview' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductReviews { get { return _staticMetaData.GetPrefetchPathElement("ProductReviews", CommonEntityBase.CreateEntityCollection<ProductReviewEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductVendor' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductVendors { get { return _staticMetaData.GetPrefetchPathElement("ProductVendors", CommonEntityBase.CreateEntityCollection<ProductVendorEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderDetails { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderDetails", CommonEntityBase.CreateEntityCollection<PurchaseOrderDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShoppingCartItem' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShoppingCartItems { get { return _staticMetaData.GetPrefetchPathElement("ShoppingCartItems", CommonEntityBase.CreateEntityCollection<ShoppingCartItemEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SpecialOfferProduct' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSpecialOfferProducts { get { return _staticMetaData.GetPrefetchPathElement("SpecialOfferProducts", CommonEntityBase.CreateEntityCollection<SpecialOfferProductEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TransactionHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTransactionHistories { get { return _staticMetaData.GetPrefetchPathElement("TransactionHistories", CommonEntityBase.CreateEntityCollection<TransactionHistoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'WorkOrder' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathWorkOrders { get { return _staticMetaData.GetPrefetchPathElement("WorkOrders", CommonEntityBase.CreateEntityCollection<WorkOrderEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductModel' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductModel { get { return _staticMetaData.GetPrefetchPathElement("ProductModel", CommonEntityBase.CreateEntityCollection<ProductModelEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductSubcategory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductSubcategory { get { return _staticMetaData.GetPrefetchPathElement("ProductSubcategory", CommonEntityBase.CreateEntityCollection<ProductSubcategoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'UnitMeasure' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUnitMeasure { get { return _staticMetaData.GetPrefetchPathElement("UnitMeasure", CommonEntityBase.CreateEntityCollection<UnitMeasureEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'UnitMeasure' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUnitMeasure_ { get { return _staticMetaData.GetPrefetchPathElement("UnitMeasure_", CommonEntityBase.CreateEntityCollection<UnitMeasureEntity>()); } }

		/// <summary>The Class property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Class".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 2.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Class
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.Class, true); }
			set	{ SetValue((int)ProductFieldIndex.Class, value); }
		}

		/// <summary>The Color property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Color".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 15.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Color
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.Color, true); }
			set	{ SetValue((int)ProductFieldIndex.Color, value); }
		}

		/// <summary>The DaysToManufacture property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."DaysToManufacture".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 DaysToManufacture
		{
			get { return (System.Int32)GetValue((int)ProductFieldIndex.DaysToManufacture, true); }
			set	{ SetValue((int)ProductFieldIndex.DaysToManufacture, value); }
		}

		/// <summary>The DiscontinuedDate property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."DiscontinuedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> DiscontinuedDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ProductFieldIndex.DiscontinuedDate, false); }
			set	{ SetValue((int)ProductFieldIndex.DiscontinuedDate, value); }
		}

		/// <summary>The FinishedGoodsFlag property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."FinishedGoodsFlag".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean FinishedGoodsFlag
		{
			get { return (System.Boolean)GetValue((int)ProductFieldIndex.FinishedGoodsFlag, true); }
			set	{ SetValue((int)ProductFieldIndex.FinishedGoodsFlag, value); }
		}

		/// <summary>The ListPrice property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ListPrice".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal ListPrice
		{
			get { return (System.Decimal)GetValue((int)ProductFieldIndex.ListPrice, true); }
			set	{ SetValue((int)ProductFieldIndex.ListPrice, value); }
		}

		/// <summary>The MakeFlag property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."MakeFlag".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean MakeFlag
		{
			get { return (System.Boolean)GetValue((int)ProductFieldIndex.MakeFlag, true); }
			set	{ SetValue((int)ProductFieldIndex.MakeFlag, value); }
		}

		/// <summary>The ModifiedDate property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)ProductFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)ProductFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The Name property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.Name, true); }
			set	{ SetValue((int)ProductFieldIndex.Name, value); }
		}

		/// <summary>The ProductId property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ProductID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ProductId
		{
			get { return (System.Int32)GetValue((int)ProductFieldIndex.ProductId, true); }
			set { SetValue((int)ProductFieldIndex.ProductId, value); }		}

		/// <summary>The ProductLine property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ProductLine".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 2.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ProductLine
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.ProductLine, true); }
			set	{ SetValue((int)ProductFieldIndex.ProductLine, value); }
		}

		/// <summary>The ProductModelId property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ProductModelID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ProductModelId
		{
			get { return (Nullable<System.Int32>)GetValue((int)ProductFieldIndex.ProductModelId, false); }
			set	{ SetValue((int)ProductFieldIndex.ProductModelId, value); }
		}

		/// <summary>The ProductNumber property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ProductNumber".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 25.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String ProductNumber
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.ProductNumber, true); }
			set	{ SetValue((int)ProductFieldIndex.ProductNumber, value); }
		}

		/// <summary>The ProductSubcategoryId property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ProductSubcategoryID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ProductSubcategoryId
		{
			get { return (Nullable<System.Int32>)GetValue((int)ProductFieldIndex.ProductSubcategoryId, false); }
			set	{ SetValue((int)ProductFieldIndex.ProductSubcategoryId, value); }
		}

		/// <summary>The ReorderPoint property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."ReorderPoint".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int16 ReorderPoint
		{
			get { return (System.Int16)GetValue((int)ProductFieldIndex.ReorderPoint, true); }
			set	{ SetValue((int)ProductFieldIndex.ReorderPoint, value); }
		}

		/// <summary>The Rowguid property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."rowguid".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid Rowguid
		{
			get { return (System.Guid)GetValue((int)ProductFieldIndex.Rowguid, true); }
			set	{ SetValue((int)ProductFieldIndex.Rowguid, value); }
		}

		/// <summary>The SafetyStockLevel property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."SafetyStockLevel".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int16 SafetyStockLevel
		{
			get { return (System.Int16)GetValue((int)ProductFieldIndex.SafetyStockLevel, true); }
			set	{ SetValue((int)ProductFieldIndex.SafetyStockLevel, value); }
		}

		/// <summary>The SellEndDate property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."SellEndDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> SellEndDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)ProductFieldIndex.SellEndDate, false); }
			set	{ SetValue((int)ProductFieldIndex.SellEndDate, value); }
		}

		/// <summary>The SellStartDate property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."SellStartDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime SellStartDate
		{
			get { return (System.DateTime)GetValue((int)ProductFieldIndex.SellStartDate, true); }
			set	{ SetValue((int)ProductFieldIndex.SellStartDate, value); }
		}

		/// <summary>The Size property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Size".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 5.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Size
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.Size, true); }
			set	{ SetValue((int)ProductFieldIndex.Size, value); }
		}

		/// <summary>The SizeUnitMeasureCode property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."SizeUnitMeasureCode".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 3.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String SizeUnitMeasureCode
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.SizeUnitMeasureCode, true); }
			set	{ SetValue((int)ProductFieldIndex.SizeUnitMeasureCode, value); }
		}

		/// <summary>The StandardCost property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."StandardCost".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal StandardCost
		{
			get { return (System.Decimal)GetValue((int)ProductFieldIndex.StandardCost, true); }
			set	{ SetValue((int)ProductFieldIndex.StandardCost, value); }
		}

		/// <summary>The Style property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Style".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 2.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Style
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.Style, true); }
			set	{ SetValue((int)ProductFieldIndex.Style, value); }
		}

		/// <summary>The Weight property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."Weight".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 8, 2, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> Weight
		{
			get { return (Nullable<System.Decimal>)GetValue((int)ProductFieldIndex.Weight, false); }
			set	{ SetValue((int)ProductFieldIndex.Weight, value); }
		}

		/// <summary>The WeightUnitMeasureCode property of the Entity Product<br/><br/></summary>
		/// <remarks>Mapped on  table field: "Product"."WeightUnitMeasureCode".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 3.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String WeightUnitMeasureCode
		{
			get { return (System.String)GetValue((int)ProductFieldIndex.WeightUnitMeasureCode, true); }
			set	{ SetValue((int)ProductFieldIndex.WeightUnitMeasureCode, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'BillOfMaterialEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(BillOfMaterialEntity))]
		public virtual EntityCollection<BillOfMaterialEntity> BillOfMaterials { get { return GetOrCreateEntityCollection<BillOfMaterialEntity, BillOfMaterialEntityFactory>("Product", true, false, ref _billOfMaterials); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'BillOfMaterialEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(BillOfMaterialEntity))]
		public virtual EntityCollection<BillOfMaterialEntity> BillOfMaterials_ { get { return GetOrCreateEntityCollection<BillOfMaterialEntity, BillOfMaterialEntityFactory>("Product_", true, false, ref _billOfMaterials_); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductCostHistoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductCostHistoryEntity))]
		public virtual EntityCollection<ProductCostHistoryEntity> ProductCostHistories { get { return GetOrCreateEntityCollection<ProductCostHistoryEntity, ProductCostHistoryEntityFactory>("Product", true, false, ref _productCostHistories); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductDocumentEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductDocumentEntity))]
		public virtual EntityCollection<ProductDocumentEntity> ProductDocuments { get { return GetOrCreateEntityCollection<ProductDocumentEntity, ProductDocumentEntityFactory>("Product", true, false, ref _productDocuments); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductInventoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductInventoryEntity))]
		public virtual EntityCollection<ProductInventoryEntity> ProductInventories { get { return GetOrCreateEntityCollection<ProductInventoryEntity, ProductInventoryEntityFactory>("Product", true, false, ref _productInventories); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductListPriceHistoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductListPriceHistoryEntity))]
		public virtual EntityCollection<ProductListPriceHistoryEntity> ProductListPriceHistories { get { return GetOrCreateEntityCollection<ProductListPriceHistoryEntity, ProductListPriceHistoryEntityFactory>("Product", true, false, ref _productListPriceHistories); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductProductPhotoEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductProductPhotoEntity))]
		public virtual EntityCollection<ProductProductPhotoEntity> ProductProductPhotos { get { return GetOrCreateEntityCollection<ProductProductPhotoEntity, ProductProductPhotoEntityFactory>("Product", true, false, ref _productProductPhotos); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductReviewEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductReviewEntity))]
		public virtual EntityCollection<ProductReviewEntity> ProductReviews { get { return GetOrCreateEntityCollection<ProductReviewEntity, ProductReviewEntityFactory>("Product", true, false, ref _productReviews); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductVendorEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductVendorEntity))]
		public virtual EntityCollection<ProductVendorEntity> ProductVendors { get { return GetOrCreateEntityCollection<ProductVendorEntity, ProductVendorEntityFactory>("Product", true, false, ref _productVendors); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'PurchaseOrderDetailEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(PurchaseOrderDetailEntity))]
		public virtual EntityCollection<PurchaseOrderDetailEntity> PurchaseOrderDetails { get { return GetOrCreateEntityCollection<PurchaseOrderDetailEntity, PurchaseOrderDetailEntityFactory>("Product", true, false, ref _purchaseOrderDetails); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ShoppingCartItemEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ShoppingCartItemEntity))]
		public virtual EntityCollection<ShoppingCartItemEntity> ShoppingCartItems { get { return GetOrCreateEntityCollection<ShoppingCartItemEntity, ShoppingCartItemEntityFactory>("Product", true, false, ref _shoppingCartItems); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'SpecialOfferProductEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(SpecialOfferProductEntity))]
		public virtual EntityCollection<SpecialOfferProductEntity> SpecialOfferProducts { get { return GetOrCreateEntityCollection<SpecialOfferProductEntity, SpecialOfferProductEntityFactory>("Product", true, false, ref _specialOfferProducts); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'TransactionHistoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(TransactionHistoryEntity))]
		public virtual EntityCollection<TransactionHistoryEntity> TransactionHistories { get { return GetOrCreateEntityCollection<TransactionHistoryEntity, TransactionHistoryEntityFactory>("Product", true, false, ref _transactionHistories); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'WorkOrderEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(WorkOrderEntity))]
		public virtual EntityCollection<WorkOrderEntity> WorkOrders { get { return GetOrCreateEntityCollection<WorkOrderEntity, WorkOrderEntityFactory>("Product", true, false, ref _workOrders); } }

		/// <summary>Gets / sets related entity of type 'ProductModelEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductModelEntity ProductModel
		{
			get { return _productModel; }
			set { SetSingleRelatedEntityNavigator(value, "ProductModel"); }
		}

		/// <summary>Gets / sets related entity of type 'ProductSubcategoryEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductSubcategoryEntity ProductSubcategory
		{
			get { return _productSubcategory; }
			set { SetSingleRelatedEntityNavigator(value, "ProductSubcategory"); }
		}

		/// <summary>Gets / sets related entity of type 'UnitMeasureEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UnitMeasureEntity UnitMeasure
		{
			get { return _unitMeasure; }
			set { SetSingleRelatedEntityNavigator(value, "UnitMeasure"); }
		}

		/// <summary>Gets / sets related entity of type 'UnitMeasureEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual UnitMeasureEntity UnitMeasure_
		{
			get { return _unitMeasure_; }
			set { SetSingleRelatedEntityNavigator(value, "UnitMeasure_"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AdventureWorks.Dal.Adapter
{
	public enum ProductFieldIndex
	{
		///<summary>Class. </summary>
		Class,
		///<summary>Color. </summary>
		Color,
		///<summary>DaysToManufacture. </summary>
		DaysToManufacture,
		///<summary>DiscontinuedDate. </summary>
		DiscontinuedDate,
		///<summary>FinishedGoodsFlag. </summary>
		FinishedGoodsFlag,
		///<summary>ListPrice. </summary>
		ListPrice,
		///<summary>MakeFlag. </summary>
		MakeFlag,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>Name. </summary>
		Name,
		///<summary>ProductId. </summary>
		ProductId,
		///<summary>ProductLine. </summary>
		ProductLine,
		///<summary>ProductModelId. </summary>
		ProductModelId,
		///<summary>ProductNumber. </summary>
		ProductNumber,
		///<summary>ProductSubcategoryId. </summary>
		ProductSubcategoryId,
		///<summary>ReorderPoint. </summary>
		ReorderPoint,
		///<summary>Rowguid. </summary>
		Rowguid,
		///<summary>SafetyStockLevel. </summary>
		SafetyStockLevel,
		///<summary>SellEndDate. </summary>
		SellEndDate,
		///<summary>SellStartDate. </summary>
		SellStartDate,
		///<summary>Size. </summary>
		Size,
		///<summary>SizeUnitMeasureCode. </summary>
		SizeUnitMeasureCode,
		///<summary>StandardCost. </summary>
		StandardCost,
		///<summary>Style. </summary>
		Style,
		///<summary>Weight. </summary>
		Weight,
		///<summary>WeightUnitMeasureCode. </summary>
		WeightUnitMeasureCode,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AdventureWorks.Dal.Adapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Product. </summary>
	public partial class ProductRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between ProductEntity and BillOfMaterialEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - BillOfMaterial.ComponentId</summary>
		public virtual IEntityRelation BillOfMaterialEntityUsingComponentId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "BillOfMaterials", true, new[] { ProductFields.ProductId, BillOfMaterialFields.ComponentId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and BillOfMaterialEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - BillOfMaterial.ProductAssemblyId</summary>
		public virtual IEntityRelation BillOfMaterialEntityUsingProductAssemblyId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "BillOfMaterials_", true, new[] { ProductFields.ProductId, BillOfMaterialFields.ProductAssemblyId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductCostHistoryEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductCostHistory.ProductId</summary>
		public virtual IEntityRelation ProductCostHistoryEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductCostHistories", true, new[] { ProductFields.ProductId, ProductCostHistoryFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductDocumentEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductDocument.ProductId</summary>
		public virtual IEntityRelation ProductDocumentEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductDocuments", true, new[] { ProductFields.ProductId, ProductDocumentFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductInventoryEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductInventory.ProductId</summary>
		public virtual IEntityRelation ProductInventoryEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductInventories", true, new[] { ProductFields.ProductId, ProductInventoryFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductListPriceHistoryEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductListPriceHistory.ProductId</summary>
		public virtual IEntityRelation ProductListPriceHistoryEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductListPriceHistories", true, new[] { ProductFields.ProductId, ProductListPriceHistoryFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductProductPhotoEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductProductPhoto.ProductId</summary>
		public virtual IEntityRelation ProductProductPhotoEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductProductPhotos", true, new[] { ProductFields.ProductId, ProductProductPhotoFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductReviewEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductReview.ProductId</summary>
		public virtual IEntityRelation ProductReviewEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductReviews", true, new[] { ProductFields.ProductId, ProductReviewFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductVendorEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ProductVendor.ProductId</summary>
		public virtual IEntityRelation ProductVendorEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductVendors", true, new[] { ProductFields.ProductId, ProductVendorFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and PurchaseOrderDetailEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - PurchaseOrderDetail.ProductId</summary>
		public virtual IEntityRelation PurchaseOrderDetailEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "PurchaseOrderDetails", true, new[] { ProductFields.ProductId, PurchaseOrderDetailFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ShoppingCartItemEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - ShoppingCartItem.ProductId</summary>
		public virtual IEntityRelation ShoppingCartItemEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ShoppingCartItems", true, new[] { ProductFields.ProductId, ShoppingCartItemFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and SpecialOfferProductEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - SpecialOfferProduct.ProductId</summary>
		public virtual IEntityRelation SpecialOfferProductEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "SpecialOfferProducts", true, new[] { ProductFields.ProductId, SpecialOfferProductFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and TransactionHistoryEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - TransactionHistory.ProductId</summary>
		public virtual IEntityRelation TransactionHistoryEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "TransactionHistories", true, new[] { ProductFields.ProductId, TransactionHistoryFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and WorkOrderEntity over the 1:n relation they have, using the relation between the fields: Product.ProductId - WorkOrder.ProductId</summary>
		public virtual IEntityRelation WorkOrderEntityUsingProductId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "WorkOrders", true, new[] { ProductFields.ProductId, WorkOrderFields.ProductId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductModelEntity over the m:1 relation they have, using the relation between the fields: Product.ProductModelId - ProductModel.ProductModelId</summary>
		public virtual IEntityRelation ProductModelEntityUsingProductModelId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProductModel", false, new[] { ProductModelFields.ProductModelId, ProductFields.ProductModelId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and ProductSubcategoryEntity over the m:1 relation they have, using the relation between the fields: Product.ProductSubcategoryId - ProductSubcategory.ProductSubcategoryId</summary>
		public virtual IEntityRelation ProductSubcategoryEntityUsingProductSubcategoryId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProductSubcategory", false, new[] { ProductSubcategoryFields.ProductSubcategoryId, ProductFields.ProductSubcategoryId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and UnitMeasureEntity over the m:1 relation they have, using the relation between the fields: Product.SizeUnitMeasureCode - UnitMeasure.UnitMeasureCode</summary>
		public virtual IEntityRelation UnitMeasureEntityUsingSizeUnitMeasureCode
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "UnitMeasure", false, new[] { UnitMeasureFields.UnitMeasureCode, ProductFields.SizeUnitMeasureCode }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductEntity and UnitMeasureEntity over the m:1 relation they have, using the relation between the fields: Product.WeightUnitMeasureCode - UnitMeasure.UnitMeasureCode</summary>
		public virtual IEntityRelation UnitMeasureEntityUsingWeightUnitMeasureCode
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "UnitMeasure_", false, new[] { UnitMeasureFields.UnitMeasureCode, ProductFields.WeightUnitMeasureCode }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticProductRelations
	{
		internal static readonly IEntityRelation BillOfMaterialEntityUsingComponentIdStatic = new ProductRelations().BillOfMaterialEntityUsingComponentId;
		internal static readonly IEntityRelation BillOfMaterialEntityUsingProductAssemblyIdStatic = new ProductRelations().BillOfMaterialEntityUsingProductAssemblyId;
		internal static readonly IEntityRelation ProductCostHistoryEntityUsingProductIdStatic = new ProductRelations().ProductCostHistoryEntityUsingProductId;
		internal static readonly IEntityRelation ProductDocumentEntityUsingProductIdStatic = new ProductRelations().ProductDocumentEntityUsingProductId;
		internal static readonly IEntityRelation ProductInventoryEntityUsingProductIdStatic = new ProductRelations().ProductInventoryEntityUsingProductId;
		internal static readonly IEntityRelation ProductListPriceHistoryEntityUsingProductIdStatic = new ProductRelations().ProductListPriceHistoryEntityUsingProductId;
		internal static readonly IEntityRelation ProductProductPhotoEntityUsingProductIdStatic = new ProductRelations().ProductProductPhotoEntityUsingProductId;
		internal static readonly IEntityRelation ProductReviewEntityUsingProductIdStatic = new ProductRelations().ProductReviewEntityUsingProductId;
		internal static readonly IEntityRelation ProductVendorEntityUsingProductIdStatic = new ProductRelations().ProductVendorEntityUsingProductId;
		internal static readonly IEntityRelation PurchaseOrderDetailEntityUsingProductIdStatic = new ProductRelations().PurchaseOrderDetailEntityUsingProductId;
		internal static readonly IEntityRelation ShoppingCartItemEntityUsingProductIdStatic = new ProductRelations().ShoppingCartItemEntityUsingProductId;
		internal static readonly IEntityRelation SpecialOfferProductEntityUsingProductIdStatic = new ProductRelations().SpecialOfferProductEntityUsingProductId;
		internal static readonly IEntityRelation TransactionHistoryEntityUsingProductIdStatic = new ProductRelations().TransactionHistoryEntityUsingProductId;
		internal static readonly IEntityRelation WorkOrderEntityUsingProductIdStatic = new ProductRelations().WorkOrderEntityUsingProductId;
		internal static readonly IEntityRelation ProductModelEntityUsingProductModelIdStatic = new ProductRelations().ProductModelEntityUsingProductModelId;
		internal static readonly IEntityRelation ProductSubcategoryEntityUsingProductSubcategoryIdStatic = new ProductRelations().ProductSubcategoryEntityUsingProductSubcategoryId;
		internal static readonly IEntityRelation UnitMeasureEntityUsingSizeUnitMeasureCodeStatic = new ProductRelations().UnitMeasureEntityUsingSizeUnitMeasureCode;
		internal static readonly IEntityRelation UnitMeasureEntityUsingWeightUnitMeasureCodeStatic = new ProductRelations().UnitMeasureEntityUsingWeightUnitMeasureCode;

		/// <summary>CTor</summary>
		static StaticProductRelations() { }
	}
}

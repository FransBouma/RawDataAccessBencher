//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AdventureWorks.Dal.Adapter.HelperClasses;
using AdventureWorks.Dal.Adapter.FactoryClasses;
using AdventureWorks.Dal.Adapter.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AdventureWorks.Dal.Adapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'SalesPersonQuotaHistory'.<br/><br/></summary>
	[Serializable]
	public partial class SalesPersonQuotaHistoryEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private SalesPersonEntity _salesPerson;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SalesPersonQuotaHistoryEntityStaticMetaData _staticMetaData = new SalesPersonQuotaHistoryEntityStaticMetaData();
		private static SalesPersonQuotaHistoryRelations _relationsFactory = new SalesPersonQuotaHistoryRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name SalesPerson</summary>
			public static readonly string SalesPerson = "SalesPerson";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SalesPersonQuotaHistoryEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SalesPersonQuotaHistoryEntityStaticMetaData()
			{
				SetEntityCoreInfo("SalesPersonQuotaHistoryEntity", InheritanceHierarchyType.None, false, (int)AdventureWorks.Dal.Adapter.EntityType.SalesPersonQuotaHistoryEntity, typeof(SalesPersonQuotaHistoryEntity), typeof(SalesPersonQuotaHistoryEntityFactory), false);
				AddNavigatorMetaData<SalesPersonQuotaHistoryEntity, SalesPersonEntity>("SalesPerson", "SalesPersonQuotaHistories", (a, b) => a._salesPerson = b, a => a._salesPerson, (a, b) => a.SalesPerson = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesPersonQuotaHistoryRelations.SalesPersonEntityUsingSalesPersonIdStatic, ()=>new SalesPersonQuotaHistoryRelations().SalesPersonEntityUsingSalesPersonId, null, new int[] { (int)SalesPersonQuotaHistoryFieldIndex.SalesPersonId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.SalesPersonEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static SalesPersonQuotaHistoryEntity()
		{
		}

		/// <summary> CTor</summary>
		public SalesPersonQuotaHistoryEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SalesPersonQuotaHistoryEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SalesPersonQuotaHistoryEntity</param>
		public SalesPersonQuotaHistoryEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="quotaDate">PK value for SalesPersonQuotaHistory which data should be fetched into this SalesPersonQuotaHistory object</param>
		/// <param name="salesPersonId">PK value for SalesPersonQuotaHistory which data should be fetched into this SalesPersonQuotaHistory object</param>
		public SalesPersonQuotaHistoryEntity(System.DateTime quotaDate, System.Int32 salesPersonId) : this(quotaDate, salesPersonId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="quotaDate">PK value for SalesPersonQuotaHistory which data should be fetched into this SalesPersonQuotaHistory object</param>
		/// <param name="salesPersonId">PK value for SalesPersonQuotaHistory which data should be fetched into this SalesPersonQuotaHistory object</param>
		/// <param name="validator">The custom validator object for this SalesPersonQuotaHistoryEntity</param>
		public SalesPersonQuotaHistoryEntity(System.DateTime quotaDate, System.Int32 salesPersonId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.QuotaDate = quotaDate;
			this.SalesPersonId = salesPersonId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SalesPersonQuotaHistoryEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'SalesPerson' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesPerson() { return CreateRelationInfoForNavigator("SalesPerson"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SalesPersonQuotaHistoryEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SalesPersonQuotaHistoryRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesPerson' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesPerson { get { return _staticMetaData.GetPrefetchPathElement("SalesPerson", CommonEntityBase.CreateEntityCollection<SalesPersonEntity>()); } }

		/// <summary>The ModifiedDate property of the Entity SalesPersonQuotaHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesPersonQuotaHistory"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)SalesPersonQuotaHistoryFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)SalesPersonQuotaHistoryFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The QuotaDate property of the Entity SalesPersonQuotaHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesPersonQuotaHistory"."QuotaDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.DateTime QuotaDate
		{
			get { return (System.DateTime)GetValue((int)SalesPersonQuotaHistoryFieldIndex.QuotaDate, true); }
			set	{ SetValue((int)SalesPersonQuotaHistoryFieldIndex.QuotaDate, value); }
		}

		/// <summary>The Rowguid property of the Entity SalesPersonQuotaHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesPersonQuotaHistory"."rowguid".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid Rowguid
		{
			get { return (System.Guid)GetValue((int)SalesPersonQuotaHistoryFieldIndex.Rowguid, true); }
			set	{ SetValue((int)SalesPersonQuotaHistoryFieldIndex.Rowguid, value); }
		}

		/// <summary>The SalesPersonId property of the Entity SalesPersonQuotaHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesPersonQuotaHistory"."BusinessEntityID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 SalesPersonId
		{
			get { return (System.Int32)GetValue((int)SalesPersonQuotaHistoryFieldIndex.SalesPersonId, true); }
			set	{ SetValue((int)SalesPersonQuotaHistoryFieldIndex.SalesPersonId, value); }
		}

		/// <summary>The SalesQuota property of the Entity SalesPersonQuotaHistory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesPersonQuotaHistory"."SalesQuota".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal SalesQuota
		{
			get { return (System.Decimal)GetValue((int)SalesPersonQuotaHistoryFieldIndex.SalesQuota, true); }
			set	{ SetValue((int)SalesPersonQuotaHistoryFieldIndex.SalesQuota, value); }
		}

		/// <summary>Gets / sets related entity of type 'SalesPersonEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual SalesPersonEntity SalesPerson
		{
			get { return _salesPerson; }
			set { SetSingleRelatedEntityNavigator(value, "SalesPerson"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AdventureWorks.Dal.Adapter
{
	public enum SalesPersonQuotaHistoryFieldIndex
	{
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>QuotaDate. </summary>
		QuotaDate,
		///<summary>Rowguid. </summary>
		Rowguid,
		///<summary>SalesPersonId. </summary>
		SalesPersonId,
		///<summary>SalesQuota. </summary>
		SalesQuota,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AdventureWorks.Dal.Adapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: SalesPersonQuotaHistory. </summary>
	public partial class SalesPersonQuotaHistoryRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between SalesPersonQuotaHistoryEntity and SalesPersonEntity over the m:1 relation they have, using the relation between the fields: SalesPersonQuotaHistory.SalesPersonId - SalesPerson.SalesPersonId</summary>
		public virtual IEntityRelation SalesPersonEntityUsingSalesPersonId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "SalesPerson", false, new[] { SalesPersonFields.SalesPersonId, SalesPersonQuotaHistoryFields.SalesPersonId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSalesPersonQuotaHistoryRelations
	{
		internal static readonly IEntityRelation SalesPersonEntityUsingSalesPersonIdStatic = new SalesPersonQuotaHistoryRelations().SalesPersonEntityUsingSalesPersonId;

		/// <summary>CTor</summary>
		static StaticSalesPersonQuotaHistoryRelations() { }
	}
}

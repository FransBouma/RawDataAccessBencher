//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AdventureWorks.Dal.Adapter.HelperClasses;
using AdventureWorks.Dal.Adapter.FactoryClasses;
using AdventureWorks.Dal.Adapter.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AdventureWorks.Dal.Adapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'PurchaseOrderHeader'.<br/><br/></summary>
	[Serializable]
	public partial class PurchaseOrderHeaderEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<PurchaseOrderDetailEntity> _purchaseOrderDetails;
		private EmployeeEntity _employee;
		private ShipMethodEntity _shipMethod;
		private VendorEntity _vendor;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static PurchaseOrderHeaderEntityStaticMetaData _staticMetaData = new PurchaseOrderHeaderEntityStaticMetaData();
		private static PurchaseOrderHeaderRelations _relationsFactory = new PurchaseOrderHeaderRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Employee</summary>
			public static readonly string Employee = "Employee";
			/// <summary>Member name ShipMethod</summary>
			public static readonly string ShipMethod = "ShipMethod";
			/// <summary>Member name Vendor</summary>
			public static readonly string Vendor = "Vendor";
			/// <summary>Member name PurchaseOrderDetails</summary>
			public static readonly string PurchaseOrderDetails = "PurchaseOrderDetails";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class PurchaseOrderHeaderEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public PurchaseOrderHeaderEntityStaticMetaData()
			{
				SetEntityCoreInfo("PurchaseOrderHeaderEntity", InheritanceHierarchyType.None, false, (int)AdventureWorks.Dal.Adapter.EntityType.PurchaseOrderHeaderEntity, typeof(PurchaseOrderHeaderEntity), typeof(PurchaseOrderHeaderEntityFactory), false);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, EntityCollection<PurchaseOrderDetailEntity>>("PurchaseOrderDetails", a => a._purchaseOrderDetails, (a, b) => a._purchaseOrderDetails = b, a => a.PurchaseOrderDetails, () => new PurchaseOrderHeaderRelations().PurchaseOrderDetailEntityUsingPurchaseOrderId, typeof(PurchaseOrderDetailEntity), (int)AdventureWorks.Dal.Adapter.EntityType.PurchaseOrderDetailEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, EmployeeEntity>("Employee", "PurchaseOrderHeaders", (a, b) => a._employee = b, a => a._employee, (a, b) => a.Employee = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticPurchaseOrderHeaderRelations.EmployeeEntityUsingEmployeeIdStatic, ()=>new PurchaseOrderHeaderRelations().EmployeeEntityUsingEmployeeId, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.EmployeeId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.EmployeeEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, ShipMethodEntity>("ShipMethod", "PurchaseOrderHeaders", (a, b) => a._shipMethod = b, a => a._shipMethod, (a, b) => a.ShipMethod = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticPurchaseOrderHeaderRelations.ShipMethodEntityUsingShipMethodIdStatic, ()=>new PurchaseOrderHeaderRelations().ShipMethodEntityUsingShipMethodId, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.ShipMethodId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.ShipMethodEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, VendorEntity>("Vendor", "PurchaseOrderHeaders", (a, b) => a._vendor = b, a => a._vendor, (a, b) => a.Vendor = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticPurchaseOrderHeaderRelations.VendorEntityUsingVendorIdStatic, ()=>new PurchaseOrderHeaderRelations().VendorEntityUsingVendorId, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.VendorId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.VendorEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static PurchaseOrderHeaderEntity()
		{
		}

		/// <summary> CTor</summary>
		public PurchaseOrderHeaderEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public PurchaseOrderHeaderEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this PurchaseOrderHeaderEntity</param>
		public PurchaseOrderHeaderEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderId">PK value for PurchaseOrderHeader which data should be fetched into this PurchaseOrderHeader object</param>
		public PurchaseOrderHeaderEntity(System.Int32 purchaseOrderId) : this(purchaseOrderId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderId">PK value for PurchaseOrderHeader which data should be fetched into this PurchaseOrderHeader object</param>
		/// <param name="validator">The custom validator object for this PurchaseOrderHeaderEntity</param>
		public PurchaseOrderHeaderEntity(System.Int32 purchaseOrderId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.PurchaseOrderId = purchaseOrderId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected PurchaseOrderHeaderEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'PurchaseOrderDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderDetails() { return CreateRelationInfoForNavigator("PurchaseOrderDetails"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Employee' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmployee() { return CreateRelationInfoForNavigator("Employee"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ShipMethod' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShipMethod() { return CreateRelationInfoForNavigator("ShipMethod"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Vendor' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoVendor() { return CreateRelationInfoForNavigator("Vendor"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this PurchaseOrderHeaderEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static PurchaseOrderHeaderRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderDetails { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderDetails", CommonEntityBase.CreateEntityCollection<PurchaseOrderDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Employee' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmployee { get { return _staticMetaData.GetPrefetchPathElement("Employee", CommonEntityBase.CreateEntityCollection<EmployeeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShipMethod' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShipMethod { get { return _staticMetaData.GetPrefetchPathElement("ShipMethod", CommonEntityBase.CreateEntityCollection<ShipMethodEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Vendor' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathVendor { get { return _staticMetaData.GetPrefetchPathElement("Vendor", CommonEntityBase.CreateEntityCollection<VendorEntity>()); } }

		/// <summary>The EmployeeId property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."EmployeeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 EmployeeId
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.EmployeeId, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.EmployeeId, value); }
		}

		/// <summary>The Freight property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."Freight".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal Freight
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.Freight, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.Freight, value); }
		}

		/// <summary>The ModifiedDate property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderHeaderFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The OrderDate property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."OrderDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime OrderDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderHeaderFieldIndex.OrderDate, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.OrderDate, value); }
		}

		/// <summary>The PurchaseOrderId property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."PurchaseOrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 PurchaseOrderId
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.PurchaseOrderId, true); }
			set { SetValue((int)PurchaseOrderHeaderFieldIndex.PurchaseOrderId, value); }		}

		/// <summary>The RevisionNumber property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."RevisionNumber".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Byte RevisionNumber
		{
			get { return (System.Byte)GetValue((int)PurchaseOrderHeaderFieldIndex.RevisionNumber, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.RevisionNumber, value); }
		}

		/// <summary>The ShipDate property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ShipDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ShipDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)PurchaseOrderHeaderFieldIndex.ShipDate, false); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ShipDate, value); }
		}

		/// <summary>The ShipMethodId property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ShipMethodID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ShipMethodId
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.ShipMethodId, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ShipMethodId, value); }
		}

		/// <summary>The Status property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."Status".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Byte Status
		{
			get { return (System.Byte)GetValue((int)PurchaseOrderHeaderFieldIndex.Status, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.Status, value); }
		}

		/// <summary>The SubTotal property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."SubTotal".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal SubTotal
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.SubTotal, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.SubTotal, value); }
		}

		/// <summary>The TaxAmt property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."TaxAmt".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TaxAmt
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.TaxAmt, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.TaxAmt, value); }
		}

		/// <summary>The TotalDue property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."TotalDue".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TotalDue
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.TotalDue, true); }
		}

		/// <summary>The VendorId property of the Entity PurchaseOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."VendorID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 VendorId
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.VendorId, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.VendorId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'PurchaseOrderDetailEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(PurchaseOrderDetailEntity))]
		public virtual EntityCollection<PurchaseOrderDetailEntity> PurchaseOrderDetails { get { return GetOrCreateEntityCollection<PurchaseOrderDetailEntity, PurchaseOrderDetailEntityFactory>("PurchaseOrderHeader", true, false, ref _purchaseOrderDetails); } }

		/// <summary>Gets / sets related entity of type 'EmployeeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual EmployeeEntity Employee
		{
			get { return _employee; }
			set { SetSingleRelatedEntityNavigator(value, "Employee"); }
		}

		/// <summary>Gets / sets related entity of type 'ShipMethodEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ShipMethodEntity ShipMethod
		{
			get { return _shipMethod; }
			set { SetSingleRelatedEntityNavigator(value, "ShipMethod"); }
		}

		/// <summary>Gets / sets related entity of type 'VendorEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual VendorEntity Vendor
		{
			get { return _vendor; }
			set { SetSingleRelatedEntityNavigator(value, "Vendor"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AdventureWorks.Dal.Adapter
{
	public enum PurchaseOrderHeaderFieldIndex
	{
		///<summary>EmployeeId. </summary>
		EmployeeId,
		///<summary>Freight. </summary>
		Freight,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>OrderDate. </summary>
		OrderDate,
		///<summary>PurchaseOrderId. </summary>
		PurchaseOrderId,
		///<summary>RevisionNumber. </summary>
		RevisionNumber,
		///<summary>ShipDate. </summary>
		ShipDate,
		///<summary>ShipMethodId. </summary>
		ShipMethodId,
		///<summary>Status. </summary>
		Status,
		///<summary>SubTotal. </summary>
		SubTotal,
		///<summary>TaxAmt. </summary>
		TaxAmt,
		///<summary>TotalDue. </summary>
		TotalDue,
		///<summary>VendorId. </summary>
		VendorId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AdventureWorks.Dal.Adapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: PurchaseOrderHeader. </summary>
	public partial class PurchaseOrderHeaderRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and PurchaseOrderDetailEntity over the 1:n relation they have, using the relation between the fields: PurchaseOrderHeader.PurchaseOrderId - PurchaseOrderDetail.PurchaseOrderId</summary>
		public virtual IEntityRelation PurchaseOrderDetailEntityUsingPurchaseOrderId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "PurchaseOrderDetails", true, new[] { PurchaseOrderHeaderFields.PurchaseOrderId, PurchaseOrderDetailFields.PurchaseOrderId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and EmployeeEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.EmployeeId - Employee.EmployeeId</summary>
		public virtual IEntityRelation EmployeeEntityUsingEmployeeId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Employee", false, new[] { EmployeeFields.EmployeeId, PurchaseOrderHeaderFields.EmployeeId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and ShipMethodEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.ShipMethodId - ShipMethod.ShipMethodId</summary>
		public virtual IEntityRelation ShipMethodEntityUsingShipMethodId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ShipMethod", false, new[] { ShipMethodFields.ShipMethodId, PurchaseOrderHeaderFields.ShipMethodId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and VendorEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.VendorId - Vendor.VendorId</summary>
		public virtual IEntityRelation VendorEntityUsingVendorId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Vendor", false, new[] { VendorFields.VendorId, PurchaseOrderHeaderFields.VendorId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticPurchaseOrderHeaderRelations
	{
		internal static readonly IEntityRelation PurchaseOrderDetailEntityUsingPurchaseOrderIdStatic = new PurchaseOrderHeaderRelations().PurchaseOrderDetailEntityUsingPurchaseOrderId;
		internal static readonly IEntityRelation EmployeeEntityUsingEmployeeIdStatic = new PurchaseOrderHeaderRelations().EmployeeEntityUsingEmployeeId;
		internal static readonly IEntityRelation ShipMethodEntityUsingShipMethodIdStatic = new PurchaseOrderHeaderRelations().ShipMethodEntityUsingShipMethodId;
		internal static readonly IEntityRelation VendorEntityUsingVendorIdStatic = new PurchaseOrderHeaderRelations().VendorEntityUsingVendorId;

		/// <summary>CTor</summary>
		static StaticPurchaseOrderHeaderRelations() { }
	}
}

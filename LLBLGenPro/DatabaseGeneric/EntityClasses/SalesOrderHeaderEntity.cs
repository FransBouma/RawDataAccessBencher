//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AdventureWorks.Dal.Adapter.HelperClasses;
using AdventureWorks.Dal.Adapter.FactoryClasses;
using AdventureWorks.Dal.Adapter.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AdventureWorks.Dal.Adapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'SalesOrderHeader'.<br/><br/></summary>
	[Serializable]
	public partial class SalesOrderHeaderEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<SalesOrderDetailEntity> _salesOrderDetails;
		private EntityCollection<SalesOrderHeaderSalesReasonEntity> _salesOrderHeaderSalesReasons;
		private AddressEntity _address;
		private AddressEntity _address_;
		private CreditCardEntity _creditCard;
		private CurrencyRateEntity _currencyRate;
		private CustomerEntity _customer;
		private SalesPersonEntity _salesPerson;
		private SalesTerritoryEntity _salesTerritory;
		private ShipMethodEntity _shipMethod;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SalesOrderHeaderEntityStaticMetaData _staticMetaData = new SalesOrderHeaderEntityStaticMetaData();
		private static SalesOrderHeaderRelations _relationsFactory = new SalesOrderHeaderRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Address</summary>
			public static readonly string Address = "Address";
			/// <summary>Member name Address_</summary>
			public static readonly string Address_ = "Address_";
			/// <summary>Member name CreditCard</summary>
			public static readonly string CreditCard = "CreditCard";
			/// <summary>Member name CurrencyRate</summary>
			public static readonly string CurrencyRate = "CurrencyRate";
			/// <summary>Member name Customer</summary>
			public static readonly string Customer = "Customer";
			/// <summary>Member name SalesPerson</summary>
			public static readonly string SalesPerson = "SalesPerson";
			/// <summary>Member name SalesTerritory</summary>
			public static readonly string SalesTerritory = "SalesTerritory";
			/// <summary>Member name ShipMethod</summary>
			public static readonly string ShipMethod = "ShipMethod";
			/// <summary>Member name SalesOrderDetails</summary>
			public static readonly string SalesOrderDetails = "SalesOrderDetails";
			/// <summary>Member name SalesOrderHeaderSalesReasons</summary>
			public static readonly string SalesOrderHeaderSalesReasons = "SalesOrderHeaderSalesReasons";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SalesOrderHeaderEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SalesOrderHeaderEntityStaticMetaData()
			{
				SetEntityCoreInfo("SalesOrderHeaderEntity", InheritanceHierarchyType.None, false, (int)AdventureWorks.Dal.Adapter.EntityType.SalesOrderHeaderEntity, typeof(SalesOrderHeaderEntity), typeof(SalesOrderHeaderEntityFactory), false);
				AddNavigatorMetaData<SalesOrderHeaderEntity, EntityCollection<SalesOrderDetailEntity>>("SalesOrderDetails", a => a._salesOrderDetails, (a, b) => a._salesOrderDetails = b, a => a.SalesOrderDetails, () => new SalesOrderHeaderRelations().SalesOrderDetailEntityUsingSalesOrderId, typeof(SalesOrderDetailEntity), (int)AdventureWorks.Dal.Adapter.EntityType.SalesOrderDetailEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, EntityCollection<SalesOrderHeaderSalesReasonEntity>>("SalesOrderHeaderSalesReasons", a => a._salesOrderHeaderSalesReasons, (a, b) => a._salesOrderHeaderSalesReasons = b, a => a.SalesOrderHeaderSalesReasons, () => new SalesOrderHeaderRelations().SalesOrderHeaderSalesReasonEntityUsingSalesOrderId, typeof(SalesOrderHeaderSalesReasonEntity), (int)AdventureWorks.Dal.Adapter.EntityType.SalesOrderHeaderSalesReasonEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, AddressEntity>("Address", "SalesOrderHeaders", (a, b) => a._address = b, a => a._address, (a, b) => a.Address = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.AddressEntityUsingBillToAddressIdStatic, ()=>new SalesOrderHeaderRelations().AddressEntityUsingBillToAddressId, null, new int[] { (int)SalesOrderHeaderFieldIndex.BillToAddressId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.AddressEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, AddressEntity>("Address_", "SalesOrderHeaders_", (a, b) => a._address_ = b, a => a._address_, (a, b) => a.Address_ = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.AddressEntityUsingShipToAddressIdStatic, ()=>new SalesOrderHeaderRelations().AddressEntityUsingShipToAddressId, null, new int[] { (int)SalesOrderHeaderFieldIndex.ShipToAddressId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.AddressEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, CreditCardEntity>("CreditCard", "SalesOrderHeaders", (a, b) => a._creditCard = b, a => a._creditCard, (a, b) => a.CreditCard = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.CreditCardEntityUsingCreditCardIdStatic, ()=>new SalesOrderHeaderRelations().CreditCardEntityUsingCreditCardId, null, new int[] { (int)SalesOrderHeaderFieldIndex.CreditCardId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.CreditCardEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, CurrencyRateEntity>("CurrencyRate", "SalesOrderHeaders", (a, b) => a._currencyRate = b, a => a._currencyRate, (a, b) => a.CurrencyRate = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.CurrencyRateEntityUsingCurrencyRateIdStatic, ()=>new SalesOrderHeaderRelations().CurrencyRateEntityUsingCurrencyRateId, null, new int[] { (int)SalesOrderHeaderFieldIndex.CurrencyRateId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.CurrencyRateEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, CustomerEntity>("Customer", "SalesOrderHeaders", (a, b) => a._customer = b, a => a._customer, (a, b) => a.Customer = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.CustomerEntityUsingCustomerIdStatic, ()=>new SalesOrderHeaderRelations().CustomerEntityUsingCustomerId, null, new int[] { (int)SalesOrderHeaderFieldIndex.CustomerId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.CustomerEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, SalesPersonEntity>("SalesPerson", "SalesOrderHeaders", (a, b) => a._salesPerson = b, a => a._salesPerson, (a, b) => a.SalesPerson = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.SalesPersonEntityUsingSalesPersonIdStatic, ()=>new SalesOrderHeaderRelations().SalesPersonEntityUsingSalesPersonId, null, new int[] { (int)SalesOrderHeaderFieldIndex.SalesPersonId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.SalesPersonEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, SalesTerritoryEntity>("SalesTerritory", "SalesOrderHeaders", (a, b) => a._salesTerritory = b, a => a._salesTerritory, (a, b) => a.SalesTerritory = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.SalesTerritoryEntityUsingTerritoryIdStatic, ()=>new SalesOrderHeaderRelations().SalesTerritoryEntityUsingTerritoryId, null, new int[] { (int)SalesOrderHeaderFieldIndex.TerritoryId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.SalesTerritoryEntity);
				AddNavigatorMetaData<SalesOrderHeaderEntity, ShipMethodEntity>("ShipMethod", "SalesOrderHeaders", (a, b) => a._shipMethod = b, a => a._shipMethod, (a, b) => a.ShipMethod = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticSalesOrderHeaderRelations.ShipMethodEntityUsingShipMethodIdStatic, ()=>new SalesOrderHeaderRelations().ShipMethodEntityUsingShipMethodId, null, new int[] { (int)SalesOrderHeaderFieldIndex.ShipMethodId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.ShipMethodEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static SalesOrderHeaderEntity()
		{
		}

		/// <summary> CTor</summary>
		public SalesOrderHeaderEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SalesOrderHeaderEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SalesOrderHeaderEntity</param>
		public SalesOrderHeaderEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="salesOrderId">PK value for SalesOrderHeader which data should be fetched into this SalesOrderHeader object</param>
		public SalesOrderHeaderEntity(System.Int32 salesOrderId) : this(salesOrderId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="salesOrderId">PK value for SalesOrderHeader which data should be fetched into this SalesOrderHeader object</param>
		/// <param name="validator">The custom validator object for this SalesOrderHeaderEntity</param>
		public SalesOrderHeaderEntity(System.Int32 salesOrderId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.SalesOrderId = salesOrderId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SalesOrderHeaderEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'SalesOrderDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesOrderDetails() { return CreateRelationInfoForNavigator("SalesOrderDetails"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'SalesOrderHeaderSalesReason' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesOrderHeaderSalesReasons() { return CreateRelationInfoForNavigator("SalesOrderHeaderSalesReasons"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Address' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddress() { return CreateRelationInfoForNavigator("Address"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Address' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddress_() { return CreateRelationInfoForNavigator("Address_"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CreditCard' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCreditCard() { return CreateRelationInfoForNavigator("CreditCard"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CurrencyRate' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCurrencyRate() { return CreateRelationInfoForNavigator("CurrencyRate"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Customer' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomer() { return CreateRelationInfoForNavigator("Customer"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'SalesPerson' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesPerson() { return CreateRelationInfoForNavigator("SalesPerson"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'SalesTerritory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesTerritory() { return CreateRelationInfoForNavigator("SalesTerritory"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ShipMethod' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShipMethod() { return CreateRelationInfoForNavigator("ShipMethod"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SalesOrderHeaderEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SalesOrderHeaderRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesOrderDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesOrderDetails { get { return _staticMetaData.GetPrefetchPathElement("SalesOrderDetails", CommonEntityBase.CreateEntityCollection<SalesOrderDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesOrderHeaderSalesReason' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesOrderHeaderSalesReasons { get { return _staticMetaData.GetPrefetchPathElement("SalesOrderHeaderSalesReasons", CommonEntityBase.CreateEntityCollection<SalesOrderHeaderSalesReasonEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddress { get { return _staticMetaData.GetPrefetchPathElement("Address", CommonEntityBase.CreateEntityCollection<AddressEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddress_ { get { return _staticMetaData.GetPrefetchPathElement("Address_", CommonEntityBase.CreateEntityCollection<AddressEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CreditCard' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCreditCard { get { return _staticMetaData.GetPrefetchPathElement("CreditCard", CommonEntityBase.CreateEntityCollection<CreditCardEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CurrencyRate' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCurrencyRate { get { return _staticMetaData.GetPrefetchPathElement("CurrencyRate", CommonEntityBase.CreateEntityCollection<CurrencyRateEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Customer' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomer { get { return _staticMetaData.GetPrefetchPathElement("Customer", CommonEntityBase.CreateEntityCollection<CustomerEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesPerson' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesPerson { get { return _staticMetaData.GetPrefetchPathElement("SalesPerson", CommonEntityBase.CreateEntityCollection<SalesPersonEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesTerritory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesTerritory { get { return _staticMetaData.GetPrefetchPathElement("SalesTerritory", CommonEntityBase.CreateEntityCollection<SalesTerritoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShipMethod' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShipMethod { get { return _staticMetaData.GetPrefetchPathElement("ShipMethod", CommonEntityBase.CreateEntityCollection<ShipMethodEntity>()); } }

		/// <summary>The AccountNumber property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."AccountNumber".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 15.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AccountNumber
		{
			get { return (System.String)GetValue((int)SalesOrderHeaderFieldIndex.AccountNumber, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.AccountNumber, value); }
		}

		/// <summary>The BillToAddressId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."BillToAddressID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 BillToAddressId
		{
			get { return (System.Int32)GetValue((int)SalesOrderHeaderFieldIndex.BillToAddressId, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.BillToAddressId, value); }
		}

		/// <summary>The Comment property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."Comment".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 128.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Comment
		{
			get { return (System.String)GetValue((int)SalesOrderHeaderFieldIndex.Comment, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.Comment, value); }
		}

		/// <summary>The CreditCardApprovalCode property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."CreditCardApprovalCode".<br/>Table field type characteristics (type, precision, scale, length): VarChar, 0, 0, 15.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String CreditCardApprovalCode
		{
			get { return (System.String)GetValue((int)SalesOrderHeaderFieldIndex.CreditCardApprovalCode, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.CreditCardApprovalCode, value); }
		}

		/// <summary>The CreditCardId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."CreditCardID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CreditCardId
		{
			get { return (Nullable<System.Int32>)GetValue((int)SalesOrderHeaderFieldIndex.CreditCardId, false); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.CreditCardId, value); }
		}

		/// <summary>The CurrencyRateId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."CurrencyRateID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CurrencyRateId
		{
			get { return (Nullable<System.Int32>)GetValue((int)SalesOrderHeaderFieldIndex.CurrencyRateId, false); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.CurrencyRateId, value); }
		}

		/// <summary>The CustomerId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."CustomerID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 CustomerId
		{
			get { return (System.Int32)GetValue((int)SalesOrderHeaderFieldIndex.CustomerId, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.CustomerId, value); }
		}

		/// <summary>The DueDate property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."DueDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DueDate
		{
			get { return (System.DateTime)GetValue((int)SalesOrderHeaderFieldIndex.DueDate, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.DueDate, value); }
		}

		/// <summary>The Freight property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."Freight".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal Freight
		{
			get { return (System.Decimal)GetValue((int)SalesOrderHeaderFieldIndex.Freight, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.Freight, value); }
		}

		/// <summary>The ModifiedDate property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)SalesOrderHeaderFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The OnlineOrderFlag property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."OnlineOrderFlag".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean OnlineOrderFlag
		{
			get { return (System.Boolean)GetValue((int)SalesOrderHeaderFieldIndex.OnlineOrderFlag, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.OnlineOrderFlag, value); }
		}

		/// <summary>The OrderDate property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."OrderDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime OrderDate
		{
			get { return (System.DateTime)GetValue((int)SalesOrderHeaderFieldIndex.OrderDate, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.OrderDate, value); }
		}

		/// <summary>The PurchaseOrderNumber property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."PurchaseOrderNumber".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 25.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String PurchaseOrderNumber
		{
			get { return (System.String)GetValue((int)SalesOrderHeaderFieldIndex.PurchaseOrderNumber, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.PurchaseOrderNumber, value); }
		}

		/// <summary>The RevisionNumber property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."RevisionNumber".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Byte RevisionNumber
		{
			get { return (System.Byte)GetValue((int)SalesOrderHeaderFieldIndex.RevisionNumber, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.RevisionNumber, value); }
		}

		/// <summary>The Rowguid property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."rowguid".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid Rowguid
		{
			get { return (System.Guid)GetValue((int)SalesOrderHeaderFieldIndex.Rowguid, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.Rowguid, value); }
		}

		/// <summary>The SalesOrderId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."SalesOrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 SalesOrderId
		{
			get { return (System.Int32)GetValue((int)SalesOrderHeaderFieldIndex.SalesOrderId, true); }
			set { SetValue((int)SalesOrderHeaderFieldIndex.SalesOrderId, value); }		}

		/// <summary>The SalesOrderNumber property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."SalesOrderNumber".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 25.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String SalesOrderNumber
		{
			get { return (System.String)GetValue((int)SalesOrderHeaderFieldIndex.SalesOrderNumber, true); }
		}

		/// <summary>The SalesPersonId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."SalesPersonID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> SalesPersonId
		{
			get { return (Nullable<System.Int32>)GetValue((int)SalesOrderHeaderFieldIndex.SalesPersonId, false); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.SalesPersonId, value); }
		}

		/// <summary>The ShipDate property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."ShipDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ShipDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)SalesOrderHeaderFieldIndex.ShipDate, false); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.ShipDate, value); }
		}

		/// <summary>The ShipMethodId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."ShipMethodID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ShipMethodId
		{
			get { return (System.Int32)GetValue((int)SalesOrderHeaderFieldIndex.ShipMethodId, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.ShipMethodId, value); }
		}

		/// <summary>The ShipToAddressId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."ShipToAddressID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ShipToAddressId
		{
			get { return (System.Int32)GetValue((int)SalesOrderHeaderFieldIndex.ShipToAddressId, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.ShipToAddressId, value); }
		}

		/// <summary>The Status property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."Status".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Byte Status
		{
			get { return (System.Byte)GetValue((int)SalesOrderHeaderFieldIndex.Status, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.Status, value); }
		}

		/// <summary>The SubTotal property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."SubTotal".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal SubTotal
		{
			get { return (System.Decimal)GetValue((int)SalesOrderHeaderFieldIndex.SubTotal, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.SubTotal, value); }
		}

		/// <summary>The TaxAmt property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."TaxAmt".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TaxAmt
		{
			get { return (System.Decimal)GetValue((int)SalesOrderHeaderFieldIndex.TaxAmt, true); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.TaxAmt, value); }
		}

		/// <summary>The TerritoryId property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."TerritoryID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> TerritoryId
		{
			get { return (Nullable<System.Int32>)GetValue((int)SalesOrderHeaderFieldIndex.TerritoryId, false); }
			set	{ SetValue((int)SalesOrderHeaderFieldIndex.TerritoryId, value); }
		}

		/// <summary>The TotalDue property of the Entity SalesOrderHeader<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SalesOrderHeader"."TotalDue".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TotalDue
		{
			get { return (System.Decimal)GetValue((int)SalesOrderHeaderFieldIndex.TotalDue, true); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'SalesOrderDetailEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(SalesOrderDetailEntity))]
		public virtual EntityCollection<SalesOrderDetailEntity> SalesOrderDetails { get { return GetOrCreateEntityCollection<SalesOrderDetailEntity, SalesOrderDetailEntityFactory>("SalesOrderHeader", true, false, ref _salesOrderDetails); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'SalesOrderHeaderSalesReasonEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(SalesOrderHeaderSalesReasonEntity))]
		public virtual EntityCollection<SalesOrderHeaderSalesReasonEntity> SalesOrderHeaderSalesReasons { get { return GetOrCreateEntityCollection<SalesOrderHeaderSalesReasonEntity, SalesOrderHeaderSalesReasonEntityFactory>("SalesOrderHeader", true, false, ref _salesOrderHeaderSalesReasons); } }

		/// <summary>Gets / sets related entity of type 'AddressEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual AddressEntity Address
		{
			get { return _address; }
			set { SetSingleRelatedEntityNavigator(value, "Address"); }
		}

		/// <summary>Gets / sets related entity of type 'AddressEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual AddressEntity Address_
		{
			get { return _address_; }
			set { SetSingleRelatedEntityNavigator(value, "Address_"); }
		}

		/// <summary>Gets / sets related entity of type 'CreditCardEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CreditCardEntity CreditCard
		{
			get { return _creditCard; }
			set { SetSingleRelatedEntityNavigator(value, "CreditCard"); }
		}

		/// <summary>Gets / sets related entity of type 'CurrencyRateEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CurrencyRateEntity CurrencyRate
		{
			get { return _currencyRate; }
			set { SetSingleRelatedEntityNavigator(value, "CurrencyRate"); }
		}

		/// <summary>Gets / sets related entity of type 'CustomerEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CustomerEntity Customer
		{
			get { return _customer; }
			set { SetSingleRelatedEntityNavigator(value, "Customer"); }
		}

		/// <summary>Gets / sets related entity of type 'SalesPersonEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual SalesPersonEntity SalesPerson
		{
			get { return _salesPerson; }
			set { SetSingleRelatedEntityNavigator(value, "SalesPerson"); }
		}

		/// <summary>Gets / sets related entity of type 'SalesTerritoryEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual SalesTerritoryEntity SalesTerritory
		{
			get { return _salesTerritory; }
			set { SetSingleRelatedEntityNavigator(value, "SalesTerritory"); }
		}

		/// <summary>Gets / sets related entity of type 'ShipMethodEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ShipMethodEntity ShipMethod
		{
			get { return _shipMethod; }
			set { SetSingleRelatedEntityNavigator(value, "ShipMethod"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AdventureWorks.Dal.Adapter
{
	public enum SalesOrderHeaderFieldIndex
	{
		///<summary>AccountNumber. </summary>
		AccountNumber,
		///<summary>BillToAddressId. </summary>
		BillToAddressId,
		///<summary>Comment. </summary>
		Comment,
		///<summary>CreditCardApprovalCode. </summary>
		CreditCardApprovalCode,
		///<summary>CreditCardId. </summary>
		CreditCardId,
		///<summary>CurrencyRateId. </summary>
		CurrencyRateId,
		///<summary>CustomerId. </summary>
		CustomerId,
		///<summary>DueDate. </summary>
		DueDate,
		///<summary>Freight. </summary>
		Freight,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>OnlineOrderFlag. </summary>
		OnlineOrderFlag,
		///<summary>OrderDate. </summary>
		OrderDate,
		///<summary>PurchaseOrderNumber. </summary>
		PurchaseOrderNumber,
		///<summary>RevisionNumber. </summary>
		RevisionNumber,
		///<summary>Rowguid. </summary>
		Rowguid,
		///<summary>SalesOrderId. </summary>
		SalesOrderId,
		///<summary>SalesOrderNumber. </summary>
		SalesOrderNumber,
		///<summary>SalesPersonId. </summary>
		SalesPersonId,
		///<summary>ShipDate. </summary>
		ShipDate,
		///<summary>ShipMethodId. </summary>
		ShipMethodId,
		///<summary>ShipToAddressId. </summary>
		ShipToAddressId,
		///<summary>Status. </summary>
		Status,
		///<summary>SubTotal. </summary>
		SubTotal,
		///<summary>TaxAmt. </summary>
		TaxAmt,
		///<summary>TerritoryId. </summary>
		TerritoryId,
		///<summary>TotalDue. </summary>
		TotalDue,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AdventureWorks.Dal.Adapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: SalesOrderHeader. </summary>
	public partial class SalesOrderHeaderRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and SalesOrderDetailEntity over the 1:n relation they have, using the relation between the fields: SalesOrderHeader.SalesOrderId - SalesOrderDetail.SalesOrderId</summary>
		public virtual IEntityRelation SalesOrderDetailEntityUsingSalesOrderId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "SalesOrderDetails", true, new[] { SalesOrderHeaderFields.SalesOrderId, SalesOrderDetailFields.SalesOrderId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and SalesOrderHeaderSalesReasonEntity over the 1:n relation they have, using the relation between the fields: SalesOrderHeader.SalesOrderId - SalesOrderHeaderSalesReason.SalesOrderId</summary>
		public virtual IEntityRelation SalesOrderHeaderSalesReasonEntityUsingSalesOrderId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "SalesOrderHeaderSalesReasons", true, new[] { SalesOrderHeaderFields.SalesOrderId, SalesOrderHeaderSalesReasonFields.SalesOrderId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and AddressEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.BillToAddressId - Address.AddressId</summary>
		public virtual IEntityRelation AddressEntityUsingBillToAddressId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Address", false, new[] { AddressFields.AddressId, SalesOrderHeaderFields.BillToAddressId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and AddressEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.ShipToAddressId - Address.AddressId</summary>
		public virtual IEntityRelation AddressEntityUsingShipToAddressId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Address_", false, new[] { AddressFields.AddressId, SalesOrderHeaderFields.ShipToAddressId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and CreditCardEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.CreditCardId - CreditCard.CreditCardId</summary>
		public virtual IEntityRelation CreditCardEntityUsingCreditCardId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CreditCard", false, new[] { CreditCardFields.CreditCardId, SalesOrderHeaderFields.CreditCardId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and CurrencyRateEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.CurrencyRateId - CurrencyRate.CurrencyRateId</summary>
		public virtual IEntityRelation CurrencyRateEntityUsingCurrencyRateId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CurrencyRate", false, new[] { CurrencyRateFields.CurrencyRateId, SalesOrderHeaderFields.CurrencyRateId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and CustomerEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.CustomerId - Customer.CustomerId</summary>
		public virtual IEntityRelation CustomerEntityUsingCustomerId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Customer", false, new[] { CustomerFields.CustomerId, SalesOrderHeaderFields.CustomerId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and SalesPersonEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.SalesPersonId - SalesPerson.SalesPersonId</summary>
		public virtual IEntityRelation SalesPersonEntityUsingSalesPersonId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "SalesPerson", false, new[] { SalesPersonFields.SalesPersonId, SalesOrderHeaderFields.SalesPersonId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and SalesTerritoryEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.TerritoryId - SalesTerritory.TerritoryId</summary>
		public virtual IEntityRelation SalesTerritoryEntityUsingTerritoryId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "SalesTerritory", false, new[] { SalesTerritoryFields.TerritoryId, SalesOrderHeaderFields.TerritoryId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between SalesOrderHeaderEntity and ShipMethodEntity over the m:1 relation they have, using the relation between the fields: SalesOrderHeader.ShipMethodId - ShipMethod.ShipMethodId</summary>
		public virtual IEntityRelation ShipMethodEntityUsingShipMethodId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ShipMethod", false, new[] { ShipMethodFields.ShipMethodId, SalesOrderHeaderFields.ShipMethodId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSalesOrderHeaderRelations
	{
		internal static readonly IEntityRelation SalesOrderDetailEntityUsingSalesOrderIdStatic = new SalesOrderHeaderRelations().SalesOrderDetailEntityUsingSalesOrderId;
		internal static readonly IEntityRelation SalesOrderHeaderSalesReasonEntityUsingSalesOrderIdStatic = new SalesOrderHeaderRelations().SalesOrderHeaderSalesReasonEntityUsingSalesOrderId;
		internal static readonly IEntityRelation AddressEntityUsingBillToAddressIdStatic = new SalesOrderHeaderRelations().AddressEntityUsingBillToAddressId;
		internal static readonly IEntityRelation AddressEntityUsingShipToAddressIdStatic = new SalesOrderHeaderRelations().AddressEntityUsingShipToAddressId;
		internal static readonly IEntityRelation CreditCardEntityUsingCreditCardIdStatic = new SalesOrderHeaderRelations().CreditCardEntityUsingCreditCardId;
		internal static readonly IEntityRelation CurrencyRateEntityUsingCurrencyRateIdStatic = new SalesOrderHeaderRelations().CurrencyRateEntityUsingCurrencyRateId;
		internal static readonly IEntityRelation CustomerEntityUsingCustomerIdStatic = new SalesOrderHeaderRelations().CustomerEntityUsingCustomerId;
		internal static readonly IEntityRelation SalesPersonEntityUsingSalesPersonIdStatic = new SalesOrderHeaderRelations().SalesPersonEntityUsingSalesPersonId;
		internal static readonly IEntityRelation SalesTerritoryEntityUsingTerritoryIdStatic = new SalesOrderHeaderRelations().SalesTerritoryEntityUsingTerritoryId;
		internal static readonly IEntityRelation ShipMethodEntityUsingShipMethodIdStatic = new SalesOrderHeaderRelations().ShipMethodEntityUsingShipMethodId;

		/// <summary>CTor</summary>
		static StaticSalesOrderHeaderRelations() { }
	}
}

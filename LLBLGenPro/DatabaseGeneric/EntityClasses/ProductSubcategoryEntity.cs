//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AdventureWorks.Dal.Adapter.HelperClasses;
using AdventureWorks.Dal.Adapter.FactoryClasses;
using AdventureWorks.Dal.Adapter.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AdventureWorks.Dal.Adapter.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'ProductSubcategory'.<br/><br/></summary>
	[Serializable]
	public partial class ProductSubcategoryEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<ProductEntity> _products;
		private ProductCategoryEntity _productCategory;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static ProductSubcategoryEntityStaticMetaData _staticMetaData = new ProductSubcategoryEntityStaticMetaData();
		private static ProductSubcategoryRelations _relationsFactory = new ProductSubcategoryRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ProductCategory</summary>
			public static readonly string ProductCategory = "ProductCategory";
			/// <summary>Member name Products</summary>
			public static readonly string Products = "Products";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ProductSubcategoryEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ProductSubcategoryEntityStaticMetaData()
			{
				SetEntityCoreInfo("ProductSubcategoryEntity", InheritanceHierarchyType.None, false, (int)AdventureWorks.Dal.Adapter.EntityType.ProductSubcategoryEntity, typeof(ProductSubcategoryEntity), typeof(ProductSubcategoryEntityFactory), false);
				AddNavigatorMetaData<ProductSubcategoryEntity, EntityCollection<ProductEntity>>("Products", a => a._products, (a, b) => a._products = b, a => a.Products, () => new ProductSubcategoryRelations().ProductEntityUsingProductSubcategoryId, typeof(ProductEntity), (int)AdventureWorks.Dal.Adapter.EntityType.ProductEntity);
				AddNavigatorMetaData<ProductSubcategoryEntity, ProductCategoryEntity>("ProductCategory", "ProductSubcategories", (a, b) => a._productCategory = b, a => a._productCategory, (a, b) => a.ProductCategory = b, AdventureWorks.Dal.Adapter.RelationClasses.StaticProductSubcategoryRelations.ProductCategoryEntityUsingProductCategoryIdStatic, ()=>new ProductSubcategoryRelations().ProductCategoryEntityUsingProductCategoryId, null, new int[] { (int)ProductSubcategoryFieldIndex.ProductCategoryId }, null, true, (int)AdventureWorks.Dal.Adapter.EntityType.ProductCategoryEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ProductSubcategoryEntity()
		{
		}

		/// <summary> CTor</summary>
		public ProductSubcategoryEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ProductSubcategoryEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ProductSubcategoryEntity</param>
		public ProductSubcategoryEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="productSubcategoryId">PK value for ProductSubcategory which data should be fetched into this ProductSubcategory object</param>
		public ProductSubcategoryEntity(System.Int32 productSubcategoryId) : this(productSubcategoryId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="productSubcategoryId">PK value for ProductSubcategory which data should be fetched into this ProductSubcategory object</param>
		/// <param name="validator">The custom validator object for this ProductSubcategoryEntity</param>
		public ProductSubcategoryEntity(System.Int32 productSubcategoryId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ProductSubcategoryId = productSubcategoryId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ProductSubcategoryEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'Product' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProducts() { return CreateRelationInfoForNavigator("Products"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProductCategory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductCategory() { return CreateRelationInfoForNavigator("ProductCategory"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ProductSubcategoryEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ProductSubcategoryRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Product' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProducts { get { return _staticMetaData.GetPrefetchPathElement("Products", CommonEntityBase.CreateEntityCollection<ProductEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductCategory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductCategory { get { return _staticMetaData.GetPrefetchPathElement("ProductCategory", CommonEntityBase.CreateEntityCollection<ProductCategoryEntity>()); } }

		/// <summary>The ModifiedDate property of the Entity ProductSubcategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProductSubcategory"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)ProductSubcategoryFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)ProductSubcategoryFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The Name property of the Entity ProductSubcategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProductSubcategory"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)ProductSubcategoryFieldIndex.Name, true); }
			set	{ SetValue((int)ProductSubcategoryFieldIndex.Name, value); }
		}

		/// <summary>The ProductCategoryId property of the Entity ProductSubcategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProductSubcategory"."ProductCategoryID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ProductCategoryId
		{
			get { return (System.Int32)GetValue((int)ProductSubcategoryFieldIndex.ProductCategoryId, true); }
			set	{ SetValue((int)ProductSubcategoryFieldIndex.ProductCategoryId, value); }
		}

		/// <summary>The ProductSubcategoryId property of the Entity ProductSubcategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProductSubcategory"."ProductSubcategoryID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ProductSubcategoryId
		{
			get { return (System.Int32)GetValue((int)ProductSubcategoryFieldIndex.ProductSubcategoryId, true); }
			set { SetValue((int)ProductSubcategoryFieldIndex.ProductSubcategoryId, value); }		}

		/// <summary>The Rowguid property of the Entity ProductSubcategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProductSubcategory"."rowguid".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid Rowguid
		{
			get { return (System.Guid)GetValue((int)ProductSubcategoryFieldIndex.Rowguid, true); }
			set	{ SetValue((int)ProductSubcategoryFieldIndex.Rowguid, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductEntity))]
		public virtual EntityCollection<ProductEntity> Products { get { return GetOrCreateEntityCollection<ProductEntity, ProductEntityFactory>("ProductSubcategory", true, false, ref _products); } }

		/// <summary>Gets / sets related entity of type 'ProductCategoryEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductCategoryEntity ProductCategory
		{
			get { return _productCategory; }
			set { SetSingleRelatedEntityNavigator(value, "ProductCategory"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AdventureWorks.Dal.Adapter
{
	public enum ProductSubcategoryFieldIndex
	{
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>Name. </summary>
		Name,
		///<summary>ProductCategoryId. </summary>
		ProductCategoryId,
		///<summary>ProductSubcategoryId. </summary>
		ProductSubcategoryId,
		///<summary>Rowguid. </summary>
		Rowguid,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AdventureWorks.Dal.Adapter.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ProductSubcategory. </summary>
	public partial class ProductSubcategoryRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between ProductSubcategoryEntity and ProductEntity over the 1:n relation they have, using the relation between the fields: ProductSubcategory.ProductSubcategoryId - Product.ProductSubcategoryId</summary>
		public virtual IEntityRelation ProductEntityUsingProductSubcategoryId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "Products", true, new[] { ProductSubcategoryFields.ProductSubcategoryId, ProductFields.ProductSubcategoryId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductSubcategoryEntity and ProductCategoryEntity over the m:1 relation they have, using the relation between the fields: ProductSubcategory.ProductCategoryId - ProductCategory.ProductCategoryId</summary>
		public virtual IEntityRelation ProductCategoryEntityUsingProductCategoryId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProductCategory", false, new[] { ProductCategoryFields.ProductCategoryId, ProductSubcategoryFields.ProductCategoryId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticProductSubcategoryRelations
	{
		internal static readonly IEntityRelation ProductEntityUsingProductSubcategoryIdStatic = new ProductSubcategoryRelations().ProductEntityUsingProductSubcategoryId;
		internal static readonly IEntityRelation ProductCategoryEntityUsingProductCategoryIdStatic = new ProductSubcategoryRelations().ProductCategoryEntityUsingProductCategoryId;

		/// <summary>CTor</summary>
		static StaticProductSubcategoryRelations() { }
	}
}

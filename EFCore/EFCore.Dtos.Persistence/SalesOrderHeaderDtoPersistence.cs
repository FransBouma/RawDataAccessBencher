//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.6.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace EFCore.Dtos.Persistence
{
	/// <summary>Static class for (extension) methods for fetching and projecting instances of EFCore.Dtos.DtoClasses.SalesOrderHeaderDto from the entity model.</summary>
	public static partial class SalesOrderHeaderPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<EFCore.Bencher.EntityClasses.SalesOrderHeader, EFCore.Dtos.DtoClasses.SalesOrderHeaderDto>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<EFCore.Bencher.EntityClasses.SalesOrderHeader, EFCore.Dtos.DtoClasses.SalesOrderHeaderDto> _compiledProjector = CreateProjectionFunc().Compile();
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static SalesOrderHeaderPersistence() { }
	
		/// <summary>Extension method which produces a projection to EFCore.Dtos.DtoClasses.SalesOrderHeaderDto which instances are projected from the 
		/// results of the specified baseQuery, which returns EFCore.Bencher.EntityClasses.SalesOrderHeader instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve EFCore.Dtos.DtoClasses.SalesOrderHeaderDto instances</returns>
		public static IQueryable<EFCore.Dtos.DtoClasses.SalesOrderHeaderDto> ProjectToSalesOrderHeaderDto(this IQueryable<EFCore.Bencher.EntityClasses.SalesOrderHeader> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}
		
		/// <summary>Extension method which produces a projection to EFCore.Dtos.DtoClasses.SalesOrderHeaderDto which instances are projected from the
		/// EFCore.Bencher.EntityClasses.SalesOrderHeader entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>EFCore.Bencher.EntityClasses.SalesOrderHeader instance created from the specified entity instance</returns>
		public static EFCore.Dtos.DtoClasses.SalesOrderHeaderDto ProjectToSalesOrderHeaderDto(this EFCore.Bencher.EntityClasses.SalesOrderHeader entity)
		{
			return _compiledProjector(entity);
		}
		
		private static System.Linq.Expressions.Expression<Func<EFCore.Bencher.EntityClasses.SalesOrderHeader, EFCore.Dtos.DtoClasses.SalesOrderHeaderDto>> CreateProjectionFunc()
		{
			return p__0 => new EFCore.Dtos.DtoClasses.SalesOrderHeaderDto()
			{
				AccountNumber = p__0.AccountNumber,
				BillToAddressId = p__0.BillToAddressId,
				Comment = p__0.Comment,
				CreditCardApprovalCode = p__0.CreditCardApprovalCode,
				CreditCardId = p__0.CreditCardId,
				CurrencyRateId = p__0.CurrencyRateId,
				Customer = new EFCore.Dtos.DtoClasses.SalesOrderHeaderDtoTypes.CustomerDto()
				{
					AccountNumber = p__0.Customer.AccountNumber,
					CustomerId = p__0.Customer.CustomerId,
					ModifiedDate = p__0.Customer.ModifiedDate,
					PersonId = p__0.Customer.PersonId,
					Rowguid = p__0.Customer.Rowguid,
					StoreId = p__0.Customer.StoreId,
					TerritoryId = p__0.Customer.TerritoryId,
				},
				CustomerId = p__0.CustomerId,
				DueDate = p__0.DueDate,
				Freight = p__0.Freight,
				ModifiedDate = p__0.ModifiedDate,
				OnlineOrderFlag = p__0.OnlineOrderFlag,
				OrderDate = p__0.OrderDate,
				PurchaseOrderNumber = p__0.PurchaseOrderNumber,
				RevisionNumber = p__0.RevisionNumber,
				Rowguid = p__0.Rowguid,
				SalesOrderDetails = p__0.SalesOrderDetails.Select(p__1 => new EFCore.Dtos.DtoClasses.SalesOrderHeaderDtoTypes.SalesOrderDetailDto()
				{
					CarrierTrackingNumber = p__1.CarrierTrackingNumber,
					LineTotal = p__1.LineTotal,
					ModifiedDate = p__1.ModifiedDate,
					OrderQty = p__1.OrderQty,
					ProductId = p__1.ProductId,
					Rowguid = p__1.Rowguid,
					SalesOrderDetailId = p__1.SalesOrderDetailId,
					SalesOrderId = p__1.SalesOrderId,
					SpecialOfferId = p__1.SpecialOfferId,
					UnitPrice = p__1.UnitPrice,
					UnitPriceDiscount = p__1.UnitPriceDiscount,
				}).ToList(),
				SalesOrderId = p__0.SalesOrderId,
				SalesOrderNumber = p__0.SalesOrderNumber,
				SalesPersonId = p__0.SalesPersonId,
				ShipDate = p__0.ShipDate,
				ShipMethodId = p__0.ShipMethodId,
				ShipToAddressId = p__0.ShipToAddressId,
				Status = p__0.Status,
				SubTotal = p__0.SubTotal,
				TaxAmt = p__0.TaxAmt,
				TerritoryId = p__0.TerritoryId,
				TotalDue = p__0.TotalDue,
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_SalesOrderHeader 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
		}
	}
}

